{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        primary: {\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        chart: {\n          \"1\": \"hsl(var(--chart-1))\",\n          \"2\": \"hsl(var(--chart-2))\",\n          \"3\": \"hsl(var(--chart-3))\",\n          \"4\": \"hsl(var(--chart-4))\",\n          \"5\": \"hsl(var(--chart-5))\",\n        },\n        sidebar: {\n          DEFAULT: \"hsl(var(--sidebar-background))\",\n          foreground: \"hsl(var(--sidebar-foreground))\",\n          primary: \"hsl(var(--sidebar-primary))\",\n          \"primary-foreground\": \"hsl(var(--sidebar-primary-foreground))\",\n          accent: \"hsl(var(--sidebar-accent))\",\n          \"accent-foreground\": \"hsl(var(--sidebar-accent-foreground))\",\n          border: \"hsl(var(--sidebar-border))\",\n          ring: \"hsl(var(--sidebar-ring))\",\n        },\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":2787},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n});\n","size_bytes":894},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on port 5000\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = 5000;\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":1921},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // put application routes here\n  // prefix all routes with /api\n\n  // use storage to perform CRUD operations on the storage interface\n  // e.g. storage.insertUser(user) or storage.getUserByUsername(username)\n\n  const httpServer = createServer(app);\n\n  return httpServer;\n}\n","size_bytes":473},"server/storage.ts":{"content":"import { users, type User, type InsertUser } from \"@shared/schema\";\n\n// modify the interface with any CRUD methods\n// you might need\n\nexport interface IStorage {\n  getUser(id: number): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<number, User>;\n  currentId: number;\n\n  constructor() {\n    this.users = new Map();\n    this.currentId = 1;\n  }\n\n  async getUser(id: number): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = this.currentId++;\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":1012},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2254},"shared/schema.ts":{"content":"import { pgTable, text, serial, integer, boolean } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: serial(\"id\").primaryKey(),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\n","size_bytes":533},"client/src/App.tsx":{"content":"import React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { AuthProvider } from './contexts/AuthContext';\nimport Layout from './components/Layout';\nimport ProtectedRoute from './components/ProtectedRoute';\n\n// Auth Pages\nimport LoginPage from './pages/auth/LoginPage';\nimport RegisterPage from './pages/auth/RegisterPage';\n\n// User Pages\nimport HomePage from './pages/user/HomePage';\nimport VenuesPage from './pages/user/VenuesPage';\nimport VenueDetailsPage from './pages/user/VenueDetailsPage';\nimport AboutUsPage from './pages/AboutUsPage';\n\n// Placeholder components for other pages\nconst BookingPage = () => <div className=\"p-8\"><h1 className=\"text-2xl font-bold\">Booking Page</h1><p>Court booking functionality coming soon...</p></div>;\nconst MyBookingsPage = () => <div className=\"p-8\"><h1 className=\"text-2xl font-bold\">My Bookings</h1><p>View your bookings here...</p></div>;\n\n// Import new profile pages\nimport ProfilePage from './pages/user/ProfilePage';\nimport OwnerProfilePage from './pages/owner/OwnerProfilePage';\nimport AdminProfilePage from './pages/admin/AdminProfilePage';\n\nconst OwnerDashboard = () => <div className=\"p-8\"><h1 className=\"text-2xl font-bold\">Owner Dashboard</h1><p>Analytics and KPIs coming soon...</p></div>;\nconst OwnerFacilities = () => <div className=\"p-8\"><h1 className=\"text-2xl font-bold\">Facility Management</h1><p>Manage your facilities here...</p></div>;\nconst OwnerTimeSlots = () => <div className=\"p-8\"><h1 className=\"text-2xl font-bold\">Time Slot Management</h1><p>Manage time slots here...</p></div>;\nconst OwnerBookings = () => <div className=\"p-8\"><h1 className=\"text-2xl font-bold\">Booking Overview</h1><p>View facility bookings here...</p></div>;\n\nconst AdminDashboard = () => <div className=\"p-8\"><h1 className=\"text-2xl font-bold\">Admin Dashboard</h1><p>Global statistics coming soon...</p></div>;\nconst AdminUsers = () => <div className=\"p-8\"><h1 className=\"text-2xl font-bold\">User Management</h1><p>Manage users here...</p></div>;\nconst AdminFacilities = () => <div className=\"p-8\"><h1 className=\"text-2xl font-bold\">Facility Approval</h1><p>Approve facilities here...</p></div>;\nconst AdminReports = () => <div className=\"p-8\"><h1 className=\"text-2xl font-bold\">Reports & Moderation</h1><p>View reports here...</p></div>;\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <Router>\n        <Layout>\n          <Routes>\n            {/* Public Routes */}\n            <Route path=\"/login\" element={<LoginPage />} />\n            <Route path=\"/register\" element={<RegisterPage />} />\n\n            {/* User Routes */}\n            <Route path=\"/home\" element={\n              <ProtectedRoute requiredRole=\"user\">\n                <HomePage />\n              </ProtectedRoute>\n            } />\n            <Route path=\"/venues\" element={\n              <ProtectedRoute requiredRole=\"user\">\n                <VenuesPage />\n              </ProtectedRoute>\n            } />\n            <Route path=\"/venues/:id\" element={\n              <ProtectedRoute requiredRole=\"user\">\n                <VenueDetailsPage />\n              </ProtectedRoute>\n            } />\n            <Route path=\"/book/:facilityId/:courtId\" element={\n              <ProtectedRoute requiredRole=\"user\">\n                <BookingPage />\n              </ProtectedRoute>\n            } />\n            <Route path=\"/bookings\" element={\n              <ProtectedRoute requiredRole=\"user\">\n                <MyBookingsPage />\n              </ProtectedRoute>\n            } />\n            <Route path=\"/profile\" element={\n              <ProtectedRoute requiredRole=\"user\">\n                <ProfilePage />\n              </ProtectedRoute>\n            } />\n            <Route path=\"/about\" element={<AboutUsPage />} />\n\n            {/* Facility Owner Routes */}\n            <Route path=\"/owner/dashboard\" element={\n              <ProtectedRoute requiredRole=\"facility_owner\">\n                <OwnerDashboard />\n              </ProtectedRoute>\n            } />\n            <Route path=\"/owner/facilities\" element={\n              <ProtectedRoute requiredRole=\"facility_owner\">\n                <OwnerFacilities />\n              </ProtectedRoute>\n            } />\n            <Route path=\"/owner/timeslots\" element={\n              <ProtectedRoute requiredRole=\"facility_owner\">\n                <OwnerTimeSlots />\n              </ProtectedRoute>\n            } />\n            <Route path=\"/owner/bookings\" element={\n              <ProtectedRoute requiredRole=\"facility_owner\">\n                <OwnerBookings />\n              </ProtectedRoute>\n            } />\n            <Route path=\"/owner/profile\" element={\n              <ProtectedRoute requiredRole=\"facility_owner\">\n                <OwnerProfilePage />\n              </ProtectedRoute>\n            } />\n\n      \n            <Route path=\"/admin/dashboard\" element={\n              <ProtectedRoute requiredRole=\"admin\">\n                <AdminDashboard />\n              </ProtectedRoute>\n            } />\n            <Route path=\"/admin/users\" element={\n              <ProtectedRoute requiredRole=\"admin\">\n                <AdminUsers />\n              </ProtectedRoute>\n            } />\n            <Route path=\"/admin/facilities\" element={\n              <ProtectedRoute requiredRole=\"admin\">\n                <AdminFacilities />\n              </ProtectedRoute>\n            } />\n            <Route path=\"/admin/reports\" element={\n              <ProtectedRoute requiredRole=\"admin\">\n                <AdminReports />\n              </ProtectedRoute>\n            } />\n            <Route path=\"/admin/profile\" element={\n              <ProtectedRoute requiredRole=\"admin\">\n                <AdminProfilePage />\n              </ProtectedRoute>\n            } />\n\n            {/* Default redirect */}\n            <Route path=\"/\" element={<Navigate to=\"/login\" replace />} />\n          </Routes>\n        </Layout>\n      </Router>\n    </AuthProvider>\n  );\n}\n\nexport default App;","size_bytes":5969},"client/src/index.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n","size_bytes":59},"client/src/main.tsx":{"content":"import { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport App from './App.tsx';\nimport './index.css';\n\ncreateRoot(document.getElementById('root')!).render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n","size_bytes":234},"client/src/vite-env.d.ts":{"content":"/// <reference types=\"vite/client\" />\n","size_bytes":38},"client/src/components/Layout.tsx":{"content":"import React, { ReactNode } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport UserLayout from './layouts/UserLayout';\nimport FacilityOwnerLayout from './layouts/FacilityOwnerLayout';\nimport AdminLayout from './layouts/AdminLayout';\n\ninterface LayoutProps {\n  children: ReactNode;\n}\n\nexport default function Layout({ children }: LayoutProps) {\n  const { user } = useAuth();\n\n  if (!user) {\n    return <>{children}</>;\n  }\n\n  switch (user.role) {\n    case 'user':\n      return <UserLayout>{children}</UserLayout>;\n    case 'facility_owner':\n      return <FacilityOwnerLayout>{children}</FacilityOwnerLayout>;\n    case 'admin':\n      return <AdminLayout>{children}</AdminLayout>;\n    default:\n      return <>{children}</>;\n  }\n}","size_bytes":747},"client/src/components/ProtectedRoute.tsx":{"content":"import React, { ReactNode } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\n\ninterface ProtectedRouteProps {\n  children: ReactNode;\n  requiredRole?: 'user' | 'facility_owner' | 'admin';\n}\n\nexport default function ProtectedRoute({ children, requiredRole }: ProtectedRouteProps) {\n  const { isAuthenticated, user } = useAuth();\n\n  if (!isAuthenticated) {\n    return <Navigate to=\"/login\" replace />;\n  }\n\n  if (requiredRole && user?.role !== requiredRole) {\n    // Redirect to appropriate dashboard based on user role\n    const dashboardPaths = {\n      user: '/home',\n      facility_owner: '/owner/dashboard',\n      admin: '/admin/dashboard',\n    };\n    return <Navigate to={dashboardPaths[user?.role || 'user']} replace />;\n  }\n\n  return <>{children}</>;\n}","size_bytes":817},"client/src/contexts/AuthContext.tsx":{"content":"import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { User } from '../types';\n\ninterface AuthContextType {\n  user: User | null;\n  login: (email: string, password: string) => Promise<boolean>;\n  logout: () => void;\n  register: (userData: Partial<User> & { password: string }) => Promise<boolean>;\n  updateProfile: (userData: Partial<User>) => Promise<boolean>;\n  isAuthenticated: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\n// Mock users data\nconst mockUsers: (User & { password: string })[] = [\n  {\n    id: '1',\n    email: 'user@example.com',\n    password: 'password123',\n    fullName: 'John Smith',\n    role: 'user',\n    status: 'active',\n    createdAt: new Date('2024-01-01'),\n  },\n  {\n    id: '2',\n    email: 'owner@example.com',\n    password: 'password123',\n    fullName: 'Sarah Johnson',\n    role: 'facility_owner',\n    status: 'active',\n    createdAt: new Date('2024-01-02'),\n  },\n  {\n    id: '3',\n    email: 'admin@example.com',\n    password: 'password123',\n    fullName: 'Mike Admin',\n    role: 'admin',\n    status: 'active',\n    createdAt: new Date('2024-01-03'),\n  },\n];\n\nexport function AuthProvider({ children }: { children: ReactNode }) {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check for stored user session\n    const storedUser = localStorage.getItem('quickcourt_user');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n    setLoading(false);\n  }, []);\n\n  const login = async (email: string, password: string): Promise<boolean> => {\n    // Simulate API call\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    \n    const foundUser = mockUsers.find(u => u.email === email && u.password === password);\n    if (foundUser) {\n      const { password: _, ...userWithoutPassword } = foundUser;\n      setUser(userWithoutPassword);\n      localStorage.setItem('quickcourt_user', JSON.stringify(userWithoutPassword));\n      return true;\n    }\n    return false;\n  };\n\n  const register = async (userData: Partial<User> & { password: string }): Promise<boolean> => {\n    // Simulate API call\n    await new Promise(resolve => setTimeout(resolve, 1500));\n    \n    const newUser: User = {\n      id: String(mockUsers.length + 1),\n      email: userData.email!,\n      fullName: userData.fullName!,\n      role: userData.role || 'user',\n      status: 'active',\n      createdAt: new Date(),\n    };\n    \n    setUser(newUser);\n    localStorage.setItem('quickcourt_user', JSON.stringify(newUser));\n    return true;\n  };\n\n  const updateProfile = async (userData: Partial<User>): Promise<boolean> => {\n    // Simulate API call\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    \n    if (user) {\n      const updatedUser = { ...user, ...userData };\n      setUser(updatedUser);\n      localStorage.setItem('quickcourt_user', JSON.stringify(updatedUser));\n      return true;\n    }\n    return false;\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('quickcourt_user');\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  const value = {\n    user,\n    login,\n    logout,\n    register,\n    updateProfile,\n    isAuthenticated: !!user,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}","size_bytes":3724},"client/src/data/mockData.ts":{"content":"import { Facility, Court, Booking, TimeSlot } from '../types';\n\nexport const mockFacilities: Facility[] = [\n  {\n    id: '1',\n    name: 'Elite Sports Complex',\n    description: 'Premium sports facility with state-of-the-art equipment and professional courts.',\n    address: '123 Sports Avenue, Downtown City',\n    ownerId: '2',\n    sports: ['Badminton', 'Tennis', 'Basketball'],\n    amenities: ['Parking', 'Locker Rooms', 'Cafeteria', 'Air Conditioning', 'Wi-Fi'],\n    photos: [\n      'https://images.pexels.com/photos/1618200/pexels-photo-1618200.jpeg',\n      'https://images.pexels.com/photos/163452/basketball-dunk-blue-game-163452.jpeg',\n      'https://images.pexels.com/photos/209977/pexels-photo-209977.jpeg'\n    ],\n    rating: 4.8,\n    reviewCount: 124,\n    status: 'approved',\n    priceRange: { min: 25, max: 45 },\n    location: { lat: 40.7128, lng: -74.0060 },\n    createdAt: new Date('2024-01-15'),\n  },\n  {\n    id: '2',\n    name: 'City Badminton Center',\n    description: 'Specialized badminton facility with 8 professional courts and expert coaching.',\n    address: '456 Racket Road, Sports District',\n    ownerId: '2',\n    sports: ['Badminton'],\n    amenities: ['Parking', 'Equipment Rental', 'Coaching', 'Air Conditioning'],\n    photos: [\n      'https://images.pexels.com/photos/209977/pexels-photo-209977.jpeg',\n      'https://images.pexels.com/photos/1263348/pexels-photo-1263348.jpeg'\n    ],\n    rating: 4.6,\n    reviewCount: 89,\n    status: 'approved',\n    priceRange: { min: 20, max: 35 },\n    location: { lat: 40.7580, lng: -73.9855 },\n    createdAt: new Date('2024-01-20'),\n  },\n  {\n    id: '3',\n    name: 'Green Turf Grounds',\n    description: 'Large outdoor turf facility perfect for football and cricket matches.',\n    address: '789 Field Lane, Green Valley',\n    ownerId: '2',\n    sports: ['Football', 'Cricket'],\n    amenities: ['Parking', 'Flood Lights', 'Changing Rooms', 'Spectator Seating'],\n    photos: [\n      'https://images.pexels.com/photos/1171084/pexels-photo-1171084.jpeg',\n      'https://images.pexels.com/photos/114296/pexels-photo-114296.jpeg'\n    ],\n    rating: 4.4,\n    reviewCount: 67,\n    status: 'approved',\n    priceRange: { min: 50, max: 80 },\n    location: { lat: 40.6892, lng: -74.0445 },\n    createdAt: new Date('2024-02-01'),\n  },\n  {\n    id: '4',\n    name: 'Metro Tennis Club',\n    description: 'Premium tennis facility with both indoor and outdoor courts.',\n    address: '321 Tennis Court, Uptown',\n    ownerId: '2',\n    sports: ['Tennis'],\n    amenities: ['Parking', 'Pro Shop', 'Coaching', 'Restaurant', 'Swimming Pool'],\n    photos: [\n      'https://images.pexels.com/photos/209977/pexels-photo-209977.jpeg'\n    ],\n    rating: 4.9,\n    reviewCount: 156,\n    status: 'approved',\n    priceRange: { min: 30, max: 60 },\n    location: { lat: 40.7831, lng: -73.9712 },\n    createdAt: new Date('2024-02-10'),\n  }\n];\n\nexport const mockCourts: Court[] = [\n  // Elite Sports Complex courts\n  { id: '1', facilityId: '1', name: 'Badminton Court 1', sportType: 'Badminton', pricePerHour: 25, operatingHours: { start: '06:00', end: '22:00' }, isActive: true },\n  { id: '2', facilityId: '1', name: 'Badminton Court 2', sportType: 'Badminton', pricePerHour: 25, operatingHours: { start: '06:00', end: '22:00' }, isActive: true },\n  { id: '3', facilityId: '1', name: 'Tennis Court 1', sportType: 'Tennis', pricePerHour: 45, operatingHours: { start: '06:00', end: '22:00' }, isActive: true },\n  { id: '4', facilityId: '1', name: 'Basketball Court 1', sportType: 'Basketball', pricePerHour: 35, operatingHours: { start: '06:00', end: '23:00' }, isActive: true },\n  \n  // City Badminton Center courts\n  { id: '5', facilityId: '2', name: 'Court A', sportType: 'Badminton', pricePerHour: 20, operatingHours: { start: '05:00', end: '23:00' }, isActive: true },\n  { id: '6', facilityId: '2', name: 'Court B', sportType: 'Badminton', pricePerHour: 20, operatingHours: { start: '05:00', end: '23:00' }, isActive: true },\n  { id: '7', facilityId: '2', name: 'Premium Court', sportType: 'Badminton', pricePerHour: 35, operatingHours: { start: '06:00', end: '22:00' }, isActive: true },\n  \n  // Green Turf Grounds courts\n  { id: '8', facilityId: '3', name: 'Main Field', sportType: 'Football', pricePerHour: 80, operatingHours: { start: '06:00', end: '21:00' }, isActive: true },\n  { id: '9', facilityId: '3', name: 'Practice Ground', sportType: 'Cricket', pricePerHour: 50, operatingHours: { start: '06:00', end: '20:00' }, isActive: true },\n  \n  // Metro Tennis Club courts\n  { id: '10', facilityId: '4', name: 'Center Court', sportType: 'Tennis', pricePerHour: 60, operatingHours: { start: '06:00', end: '22:00' }, isActive: true },\n  { id: '11', facilityId: '4', name: 'Court 2', sportType: 'Tennis', pricePerHour: 45, operatingHours: { start: '06:00', end: '22:00' }, isActive: true },\n  { id: '12', facilityId: '4', name: 'Court 3', sportType: 'Tennis', pricePerHour: 30, operatingHours: { start: '06:00', end: '22:00' }, isActive: true },\n];\n\nexport const mockBookings: Booking[] = [\n  {\n    id: '1',\n    userId: '1',\n    facilityId: '1',\n    courtId: '1',\n    date: '2024-12-20',\n    timeSlot: { start: '10:00', end: '11:00' },\n    status: 'confirmed',\n    totalPrice: 25,\n    paymentStatus: 'paid',\n    createdAt: new Date('2024-12-15'),\n  },\n  {\n    id: '2',\n    userId: '1',\n    facilityId: '2',\n    courtId: '5',\n    date: '2024-12-25',\n    timeSlot: { start: '18:00', end: '19:00' },\n    status: 'confirmed',\n    totalPrice: 20,\n    paymentStatus: 'paid',\n    createdAt: new Date('2024-12-16'),\n  },\n  {\n    id: '3',\n    userId: '1',\n    facilityId: '4',\n    courtId: '10',\n    date: '2024-12-18',\n    timeSlot: { start: '16:00', end: '17:00' },\n    status: 'completed',\n    totalPrice: 60,\n    paymentStatus: 'paid',\n    createdAt: new Date('2024-12-10'),\n  },\n];","size_bytes":5804},"client/src/pages/AboutUsPage.tsx":{"content":"import React from 'react';\nimport { Trophy, Users, Target, Heart } from 'lucide-react';\n\nconst AboutUsPage = () => {\n  return (\n    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n      <div className=\"text-center mb-12\">\n        <div className=\"flex justify-center mb-6\">\n          <div className=\"p-4 bg-blue-600 rounded-full\">\n            <Trophy className=\"h-12 w-12 text-white\" />\n          </div>\n        </div>\n        <h1 className=\"text-4xl font-bold text-gray-900 mb-4\">About QuickCourt</h1>\n        <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n          Revolutionizing sports facility booking with AI-powered insights and seamless user experience\n        </p>\n      </div>\n\n      <div className=\"grid md:grid-cols-2 gap-12 mb-12\">\n        <div>\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">Our Mission</h2>\n          <p className=\"text-gray-600 leading-relaxed\">\n            At QuickCourt, we're passionate about making sports accessible to everyone. Our platform \n            connects athletes with premium sports facilities while providing AI-powered coaching \n            insights to help users improve their game.\n          </p>\n        </div>\n        \n        <div>\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">What We Offer</h2>\n          <ul className=\"space-y-3 text-gray-600\">\n            <li className=\"flex items-start\">\n              <Target className=\"h-5 w-5 text-blue-600 mr-2 mt-0.5\" />\n              <span>Easy booking of sports courts and facilities</span>\n            </li>\n            <li className=\"flex items-start\">\n              <Users className=\"h-5 w-5 text-blue-600 mr-2 mt-0.5\" />\n              <span>AI-powered coaching and performance insights</span>\n            </li>\n            <li className=\"flex items-start\">\n              <Heart className=\"h-5 w-5 text-blue-600 mr-2 mt-0.5\" />\n              <span>Community-driven sports experience</span>\n            </li>\n          </ul>\n        </div>\n      </div>\n\n      <div className=\"bg-gray-50 rounded-xl p-8\">\n        <h3 className=\"text-xl font-bold text-gray-900 mb-4\">Join Our Community</h3>\n        <p className=\"text-gray-600\">\n          Whether you're a casual player or a serious athlete, QuickCourt is designed to enhance \n          your sports experience. Book courts, track your progress, and connect with fellow \n          sports enthusiasts all in one place.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default AboutUsPage;\n","size_bytes":2501},"client/src/services/api.js":{"content":"const API_BASE_URL = 'http://localhost:5000/api';\n\nclass ApiService {\n  async getUserProfile(userId) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/profile/${userId}`);\n      if (!response.ok) throw new Error('Failed to fetch user profile');\n      return await response.json();\n    } catch (error) {\n      console.error('Error fetching user profile:', error);\n      throw error;\n    }\n  }\n\n  async updateUserProfile(userId, profileData) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/profile/${userId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(profileData),\n      });\n      if (!response.ok) throw new Error('Failed to update user profile');\n      return await response.json();\n    } catch (error) {\n      console.error('Error updating user profile:', error);\n      throw error;\n    }\n  }\n\n  async patchUserProfile(userId, profileData) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/profile/${userId}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(profileData),\n      });\n      if (!response.ok) throw new Error('Failed to update user profile');\n      return await response.json();\n    } catch (error) {\n      console.error('Error updating user profile:', error);\n      throw error;\n    }\n  }\n}\n\nexport default new ApiService();\n","size_bytes":1457},"client/src/types/index.ts":{"content":"export interface User {\n  id: string;\n  email: string;\n  fullName: string;\n  avatar?: string;\n  role: 'user' | 'facility_owner' | 'admin';\n  status: 'active' | 'banned';\n  createdAt: Date;\n}\n\nexport interface Facility {\n  id: string;\n  name: string;\n  description: string;\n  address: string;\n  ownerId: string;\n  sports: string[];\n  amenities: string[];\n  photos: string[];\n  rating: number;\n  reviewCount: number;\n  status: 'pending' | 'approved' | 'rejected';\n  priceRange: {\n    min: number;\n    max: number;\n  };\n  location: {\n    lat: number;\n    lng: number;\n  };\n  createdAt: Date;\n}\n\nexport interface Court {\n  id: string;\n  facilityId: string;\n  name: string;\n  sportType: string;\n  pricePerHour: number;\n  operatingHours: {\n    start: string;\n    end: string;\n  };\n  isActive: boolean;\n}\n\nexport interface Booking {\n  id: string;\n  userId: string;\n  facilityId: string;\n  courtId: string;\n  date: string;\n  timeSlot: {\n    start: string;\n    end: string;\n  };\n  status: 'confirmed' | 'cancelled' | 'completed';\n  totalPrice: number;\n  paymentStatus: 'pending' | 'paid' | 'refunded';\n  createdAt: Date;\n}\n\nexport interface TimeSlot {\n  id: string;\n  courtId: string;\n  date: string;\n  startTime: string;\n  endTime: string;\n  isAvailable: boolean;\n  isBlocked: boolean;\n  reason?: string;\n}\n\nexport interface Review {\n  id: string;\n  userId: string;\n  facilityId: string;\n  rating: number;\n  comment: string;\n  createdAt: Date;\n}","size_bytes":1437},"client/src/components/layouts/AdminLayout.tsx":{"content":"import React, { ReactNode, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { \n  BarChart3, \n  Users, \n  CheckSquare, \n  FileText, \n  User, \n  LogOut, \n  Menu, \n  X,\n  Trophy,\n  Brain,\n  Info\n} from 'lucide-react';\n\ninterface AdminLayoutProps {\n  children: ReactNode;\n}\n\nexport default function AdminLayout({ children }: AdminLayoutProps) {\n  const { user, logout } = useAuth();\n  const location = useLocation();\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n\n  const navigation = [\n    { name: 'Dashboard', href: '/admin/dashboard', icon: BarChart3 },\n    { name: 'User Management', href: '/admin/users', icon: Users },\n    { name: 'Facility Approval', href: '/admin/facilities', icon: CheckSquare },\n    { name: 'Reports', href: '/admin/reports', icon: FileText },\n    { name: 'AI Coach', href: '/ai-coach', icon: Brain },\n    { name: 'About Us', href: '/about', icon: Info },\n    { name: 'Profile', href: '/admin/profile', icon: User },\n  ];\n\n  const isActive = (path: string) => location.pathname === path;\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <header className=\"bg-white shadow-sm border-b border-gray-100\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center h-16\">\n            {/* Logo */}\n            <Link to=\"/admin/dashboard\" className=\"flex items-center space-x-2\">\n              <div className=\"p-2 bg-purple-600 rounded-lg\">\n                <Trophy className=\"h-6 w-6 text-white\" />\n              </div>\n              <span className=\"text-2xl font-bold text-gray-900\">QuickCourt</span>\n              <span className=\"px-2 py-1 bg-purple-100 text-purple-700 text-xs font-semibold rounded-full\">\n                Admin\n              </span>\n            </Link>\n\n            {/* Desktop Navigation */}\n            <nav className=\"hidden md:flex space-x-8\">\n              {navigation.map((item) => (\n                <Link\n                  key={item.name}\n                  to={item.href}\n                  className={`flex items-center space-x-1 px-3 py-2 rounded-lg text-sm font-medium transition-colors ${\n                    isActive(item.href)\n                      ? 'bg-purple-100 text-purple-700'\n                      : 'text-gray-600 hover:text-gray-900 hover:bg-gray-100'\n                  }`}\n                >\n                  <item.icon className=\"h-4 w-4\" />\n                  <span>{item.name}</span>\n                </Link>\n              ))}\n            </nav>\n\n            {/* User Menu */}\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"hidden md:flex items-center space-x-2\">\n                <div className=\"h-8 w-8 bg-purple-600 rounded-full flex items-center justify-center\">\n                  <span className=\"text-white text-sm font-semibold\">\n                    {user?.fullName?.charAt(0) || 'A'}\n                  </span>\n                </div>\n                <span className=\"text-sm font-medium text-gray-700\">{user?.fullName}</span>\n              </div>\n              <button\n                onClick={logout}\n                className=\"p-2 text-gray-500 hover:text-gray-700 hover:bg-gray-100 rounded-lg transition-colors\"\n              >\n                <LogOut className=\"h-5 w-5\" />\n              </button>\n              <button\n                onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n                className=\"md:hidden p-2 text-gray-500 hover:text-gray-700\"\n              >\n                {isMobileMenuOpen ? <X className=\"h-6 w-6\" /> : <Menu className=\"h-6 w-6\" />}\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Mobile Navigation */}\n        {isMobileMenuOpen && (\n          <div className=\"md:hidden border-t border-gray-200\">\n            <div className=\"px-4 py-2 space-y-1\">\n              {navigation.map((item) => (\n                <Link\n                  key={item.name}\n                  to={item.href}\n                  onClick={() => setIsMobileMenuOpen(false)}\n                  className={`flex items-center space-x-2 px-3 py-2 rounded-lg text-base font-medium ${\n                    isActive(item.href)\n                      ? 'bg-purple-100 text-purple-700'\n                      : 'text-gray-600 hover:text-gray-900 hover:bg-gray-100'\n                  }`}\n                >\n                  <item.icon className=\"h-5 w-5\" />\n                  <span>{item.name}</span>\n                </Link>\n              ))}\n            </div>\n          </div>\n        )}\n      </header>\n\n      {/* Main Content */}\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {children}\n      </main>\n    </div>\n  );\n}","size_bytes":4815},"client/src/components/layouts/FacilityOwnerLayout.tsx":{"content":"import React, { ReactNode, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { \n  BarChart3, \n  Building, \n  Clock, \n  Calendar, \n  User, \n  LogOut, \n  Menu, \n  X,\n  Trophy,\n  Brain,\n  Info\n} from 'lucide-react';\n\ninterface FacilityOwnerLayoutProps {\n  children: ReactNode;\n}\n\nexport default function FacilityOwnerLayout({ children }: FacilityOwnerLayoutProps) {\n  const { user, logout } = useAuth();\n  const location = useLocation();\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n\n  const navigation = [\n    { name: 'Dashboard', href: '/owner/dashboard', icon: BarChart3 },\n    { name: 'Facilities', href: '/owner/facilities', icon: Building },\n    { name: 'Time Slots', href: '/owner/timeslots', icon: Clock },\n    { name: 'Bookings', href: '/owner/bookings', icon: Calendar },\n    { name: 'AI Coach', href: '/ai-coach', icon: Brain },\n    { name: 'About Us', href: '/about', icon: Info },\n    { name: 'Profile', href: '/owner/profile', icon: User },\n  ];\n\n  const isActive = (path: string) => location.pathname === path;\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <header className=\"bg-white shadow-sm border-b border-gray-100\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center h-16\">\n            {/* Logo */}\n            <Link to=\"/owner/dashboard\" className=\"flex items-center space-x-2\">\n              <div className=\"p-2 bg-green-600 rounded-lg\">\n                <Trophy className=\"h-6 w-6 text-white\" />\n              </div>\n              <span className=\"text-2xl font-bold text-gray-900\">QuickCourt</span>\n              <span className=\"px-2 py-1 bg-green-100 text-green-700 text-xs font-semibold rounded-full\">\n                Owner\n              </span>\n            </Link>\n\n            {/* Desktop Navigation */}\n            <nav className=\"hidden md:flex space-x-8\">\n              {navigation.map((item) => (\n                <Link\n                  key={item.name}\n                  to={item.href}\n                  className={`flex items-center space-x-1 px-3 py-2 rounded-lg text-sm font-medium transition-colors ${\n                    isActive(item.href)\n                      ? 'bg-green-100 text-green-700'\n                      : 'text-gray-600 hover:text-gray-900 hover:bg-gray-100'\n                  }`}\n                >\n                  <item.icon className=\"h-4 w-4\" />\n                  <span>{item.name}</span>\n                </Link>\n              ))}\n            </nav>\n\n            {/* User Menu */}\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"hidden md:flex items-center space-x-2\">\n                <div className=\"h-8 w-8 bg-green-600 rounded-full flex items-center justify-center\">\n                  <span className=\"text-white text-sm font-semibold\">\n                    {user?.fullName?.charAt(0) || 'O'}\n                  </span>\n                </div>\n                <span className=\"text-sm font-medium text-gray-700\">{user?.fullName}</span>\n              </div>\n              <button\n                onClick={logout}\n                className=\"p-2 text-gray-500 hover:text-gray-700 hover:bg-gray-100 rounded-lg transition-colors\"\n              >\n                <LogOut className=\"h-5 w-5\" />\n              </button>\n              <button\n                onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n                className=\"md:hidden p-2 text-gray-500 hover:text-gray-700\"\n              >\n                {isMobileMenuOpen ? <X className=\"h-6 w-6\" /> : <Menu className=\"h-6 w-6\" />}\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Mobile Navigation */}\n        {isMobileMenuOpen && (\n          <div className=\"md:hidden border-t border-gray-200\">\n            <div className=\"px-4 py-2 space-y-1\">\n              {navigation.map((item) => (\n                <Link\n                  key={item.name}\n                  to={item.href}\n                  onClick={() => setIsMobileMenuOpen(false)}\n                  className={`flex items-center space-x-2 px-3 py-2 rounded-lg text-base font-medium ${\n                    isActive(item.href)\n                      ? 'bg-green-100 text-green-700'\n                      : 'text-gray-600 hover:text-gray-900 hover:bg-gray-100'\n                  }`}\n                >\n                  <item.icon className=\"h-5 w-5\" />\n                  <span>{item.name}</span>\n                </Link>\n              ))}\n            </div>\n          </div>\n        )}\n      </header>\n\n      {/* Main Content */}\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {children}\n      </main>\n    </div>\n  );\n}","size_bytes":4819},"client/src/components/layouts/UserLayout.tsx":{"content":"import React, { ReactNode, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { \n  Home, \n  MapPin, \n  Calendar, \n  User, \n  LogOut, \n  Menu, \n  X,\n  Trophy,\n  Brain,\n  Info\n} from 'lucide-react';\n\ninterface UserLayoutProps {\n  children: ReactNode;\n}\n\nexport default function UserLayout({ children }: UserLayoutProps) {\n  const { user, logout } = useAuth();\n  const location = useLocation();\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n\n  const navigation = [\n    { name: 'Home', href: '/home', icon: Home },\n    { name: 'Venues', href: '/venues', icon: MapPin },\n    { name: 'My Bookings', href: '/bookings', icon: Calendar },\n    { name: 'AI Coach', href: '/ai-coach', icon: Brain },\n    { name: 'About Us', href: '/about', icon: Info },\n    { name: 'Profile', href: '/profile', icon: User },\n  ];\n\n  const isActive = (path: string) => location.pathname === path;\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Desktop Header */}\n      <header className=\"bg-white shadow-sm border-b border-gray-100\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center h-16\">\n            {/* Logo */}\n            <Link to=\"/home\" className=\"flex items-center space-x-2\">\n              <div className=\"p-2 bg-blue-600 rounded-lg\">\n                <Trophy className=\"h-6 w-6 text-white\" />\n              </div>\n              <span className=\"text-2xl font-bold text-gray-900\">QuickCourt</span>\n            </Link>\n\n            {/* Desktop Navigation */}\n            <nav className=\"hidden md:flex space-x-8\">\n              {navigation.map((item) => (\n                <Link\n                  key={item.name}\n                  to={item.href}\n                  className={`flex items-center space-x-1 px-3 py-2 rounded-lg text-sm font-medium transition-colors ${\n                    isActive(item.href)\n                      ? 'bg-blue-100 text-blue-700'\n                      : 'text-gray-600 hover:text-gray-900 hover:bg-gray-100'\n                  }`}\n                >\n                  <item.icon className=\"h-4 w-4\" />\n                  <span>{item.name}</span>\n                </Link>\n              ))}\n            </nav>\n\n            {/* User Menu */}\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"hidden md:flex items-center space-x-2\">\n                <div className=\"h-8 w-8 bg-blue-600 rounded-full flex items-center justify-center\">\n                  <span className=\"text-white text-sm font-semibold\">\n                    {user?.fullName?.charAt(0) || 'U'}\n                  </span>\n                </div>\n                <span className=\"text-sm font-medium text-gray-700\">{user?.fullName}</span>\n              </div>\n              <button\n                onClick={logout}\n                className=\"p-2 text-gray-500 hover:text-gray-700 hover:bg-gray-100 rounded-lg transition-colors\"\n              >\n                <LogOut className=\"h-5 w-5\" />\n              </button>\n              <button\n                onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n                className=\"md:hidden p-2 text-gray-500 hover:text-gray-700\"\n              >\n                {isMobileMenuOpen ? <X className=\"h-6 w-6\" /> : <Menu className=\"h-6 w-6\" />}\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Mobile Navigation */}\n        {isMobileMenuOpen && (\n          <div className=\"md:hidden border-t border-gray-200\">\n            <div className=\"px-4 py-2 space-y-1\">\n              {navigation.map((item) => (\n                <Link\n                  key={item.name}\n                  to={item.href}\n                  onClick={() => setIsMobileMenuOpen(false)}\n                  className={`flex items-center space-x-2 px-3 py-2 rounded-lg text-base font-medium ${\n                    isActive(item.href)\n                      ? 'bg-blue-100 text-blue-700'\n                      : 'text-gray-600 hover:text-gray-900 hover:bg-gray-100'\n                  }`}\n                >\n                  <item.icon className=\"h-5 w-5\" />\n                  <span>{item.name}</span>\n                </Link>\n              ))}\n            </div>\n          </div>\n        )}\n      </header>\n\n      {/* Main Content */}\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {children}\n      </main>\n    </div>\n  );\n}","size_bytes":4503},"client/src/pages/admin/AdminProfilePage.tsx":{"content":"import React, { useState } from 'react';\nimport { User, Shield, BarChart3, Users, AlertTriangle, Edit2, Camera, Activity, Settings } from 'lucide-react';\nimport { useAuth } from '../../contexts/AuthContext';\n\ninterface AdminStats {\n  totalUsers: number;\n  totalFacilities: number;\n  pendingApprovals: number;\n  reportsToday: number;\n  systemUptime: string;\n  totalRevenue: number;\n}\n\ninterface AdminProfile {\n  id: string;\n  fullName: string;\n  email: string;\n  avatar?: string;\n  role: string;\n  department: string;\n  permissions: string[];\n  joinDate: string;\n  lastLogin: string;\n  stats: AdminStats;\n  recentActivity: {\n    date: string;\n    action: string;\n    details: string;\n  }[];\n  systemHealth: {\n    service: string;\n    status: 'operational' | 'degraded' | 'down';\n    uptime: string;\n  }[];\n}\n\nconst AdminProfilePage: React.FC = () => {\n  const { user } = useAuth();\n  const [isEditing, setIsEditing] = useState(false);\n  const [profile, setProfile] = useState<AdminProfile>({\n    id: '3',\n    fullName: 'Michael Chen',\n    email: 'michael.chen@quickcourt.com',\n    avatar: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face',\n    role: 'admin',\n    department: 'Platform Operations',\n    permissions: ['User Management', 'Facility Approval', 'Content Moderation', 'System Monitoring', 'Analytics'],\n    joinDate: 'January 2022',\n    lastLogin: '2 minutes ago',\n    stats: {\n      totalUsers: 2847,\n      totalFacilities: 156,\n      pendingApprovals: 12,\n      reportsToday: 3,\n      systemUptime: '99.9%',\n      totalRevenue: 125680\n    },\n    recentActivity: [\n      {\n        date: '5 minutes ago',\n        action: 'Approved facility',\n        details: 'Green Valley Sports Complex'\n      },\n      {\n        date: '1 hour ago',\n        action: 'Resolved user report',\n        details: 'Spam content removed'\n      },\n      {\n        date: '3 hours ago',\n        action: 'System maintenance',\n        details: 'Database optimization completed'\n      },\n      {\n        date: '6 hours ago',\n        action: 'User suspension',\n        details: 'Policy violation - User #1247'\n      }\n    ],\n    systemHealth: [\n      {\n        service: 'Web Application',\n        status: 'operational',\n        uptime: '99.9%'\n      },\n      {\n        service: 'Database',\n        status: 'operational',\n        uptime: '99.8%'\n      },\n      {\n        service: 'Payment Gateway',\n        status: 'operational',\n        uptime: '100%'\n      },\n      {\n        service: 'Email Service',\n        status: 'degraded',\n        uptime: '98.5%'\n      }\n    ]\n  });\n\n  const handleSaveProfile = () => {\n    setIsEditing(false);\n    // Here you would typically make an API call to save the profile\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'operational': return 'text-green-600 bg-green-100';\n      case 'degraded': return 'text-yellow-600 bg-yellow-100';\n      case 'down': return 'text-red-600 bg-red-100';\n      default: return 'text-gray-600 bg-gray-100';\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Header */}\n        <div className=\"bg-white rounded-lg shadow-sm p-6 mb-6\">\n          <div className=\"flex items-center justify-between\">\n            <h1 className=\"text-3xl font-bold text-gray-900\">Administrator Profile</h1>\n            <button\n              onClick={() => setIsEditing(!isEditing)}\n              className=\"flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n            >\n              <Edit2 className=\"w-4 h-4 mr-2\" />\n              {isEditing ? 'Cancel' : 'Edit Profile'}\n            </button>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          {/* Left Column - Profile Info */}\n          <div className=\"lg:col-span-1\">\n            <div className=\"bg-white rounded-lg shadow-sm p-6\">\n              <div className=\"text-center\">\n                <div className=\"relative inline-block\">\n                  <img\n                    src={profile.avatar || `https://ui-avatars.com/api/?name=${profile.fullName}&size=150`}\n                    alt={profile.fullName}\n                    className=\"w-32 h-32 rounded-full mx-auto object-cover\"\n                  />\n                  {isEditing && (\n                    <button className=\"absolute bottom-0 right-0 bg-blue-600 text-white p-2 rounded-full hover:bg-blue-700\">\n                      <Camera className=\"w-4 h-4\" />\n                    </button>\n                  )}\n                </div>\n                \n                <h2 className=\"mt-4 text-xl font-semibold text-gray-900\">\n                  {isEditing ? (\n                    <input\n                      type=\"text\"\n                      value={profile.fullName}\n                      onChange={(e) => setProfile({...profile, fullName: e.target.value})}\n                      className=\"text-center border-b-2 border-gray-300 focus:border-blue-500 outline-none\"\n                    />\n                  ) : (\n                    profile.fullName\n                  )}\n                </h2>\n                \n                <p className=\"text-gray-600 mt-1\">{profile.email}</p>\n                \n                <div className=\"mt-4 text-sm text-gray-500\">\n                  <Shield className=\"w-4 h-4 inline mr-1\" />\n                  {isEditing ? (\n                    <input\n                      type=\"text\"\n                      value={profile.department}\n                      onChange={(e) => setProfile({...profile, department: e.target.value})}\n                      className=\"text-center border-b-2 border-gray-300 focus:border-blue-500 outline-none\"\n                    />\n                  ) : (\n                    profile.department\n                  )}\n                </div>\n                \n                <div className=\"mt-2 text-sm text-gray-500\">\n                  Admin since {profile.joinDate}\n                </div>\n                \n                <div className=\"mt-2 text-sm text-gray-500\">\n                  Last login: {profile.lastLogin}\n                </div>\n              </div>\n\n              <div className=\"mt-6\">\n                <h3 className=\"text-sm font-medium text-gray-900 mb-2\">Permissions</h3>\n                <div className=\"flex flex-wrap gap-2\">\n                  {profile.permissions.map((permission, index) => (\n                    <span key={index} className=\"text-xs bg-blue-100 text-blue-800 px-2 py-1 rounded-full\">\n                      {permission}\n                    </span>\n                  ))}\n                </div>\n              </div>\n            </div>\n\n            {/* Stats Card */}\n            <div className=\"bg-white rounded-lg shadow-sm p-6 mt-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Platform Stats</h3>\n              <div className=\"space-y-4\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-600\">Total Users</span>\n                  <span className=\"text-lg font-semibold text-blue-600\">{profile.stats.totalUsers.toLocaleString()}</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-600\">Total Facilities</span>\n                  <span className=\"text-lg font-semibold text-green-600\">{profile.stats.totalFacilities}</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-600\">Pending Approvals</span>\n                  <span className=\"text-lg font-semibold text-yellow-600\">{profile.stats.pendingApprovals}</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-600\">Reports Today</span>\n                  <span className=\"text-lg font-semibold text-red-600\">{profile.stats.reportsToday}</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-600\">System Uptime</span>\n                  <span className=\"text-lg font-semibold text-green-600\">{profile.stats.systemUptime}</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-600\">Total Revenue</span>\n                  <span className=\"text-lg font-semibold text-green-600\">${profile.stats.totalRevenue.toLocaleString()}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Right Column - System Health & Activity */}\n          <div className=\"lg:col-span-2\">\n            {/* System Health */}\n            <div className=\"bg-white rounded-lg shadow-sm p-6 mb-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n                <Activity className=\"w-5 h-5 mr-2 text-blue-500\" />\n                System Health\n              </h3>\n              <div className=\"space-y-3\">\n                {profile.systemHealth.map((service, index) => (\n                  <div key={index} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n                    <div>\n                      <p className=\"font-medium text-gray-900\">{service.service}</p>\n                      <p className=\"text-sm text-gray-600\">Uptime: {service.uptime}</p>\n                    </div>\n                    <span className={`text-sm px-3 py-1 rounded-full ${getStatusColor(service.status)}`}>\n                      {service.status}\n                    </span>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* Recent Activity */}\n            <div className=\"bg-white rounded-lg shadow-sm p-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n                <BarChart3 className=\"w-5 h-5 mr-2 text-green-500\" />\n                Recent Activity\n              </h3>\n              <div className=\"space-y-4\">\n                {profile.recentActivity.map((activity, index) => (\n                  <div key={index} className=\"flex items-start space-x-3\">\n                    <div className=\"flex-shrink-0\">\n                      <div className=\"w-2 h-2 bg-blue-500 rounded-full mt-2\"></div>\n                    </div>\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-900\">{activity.action}</p>\n                      <p className=\"text-sm text-gray-600\">{activity.details}</p>\n                      <p className=\"text-xs text-gray-400\">{activity.date}</p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {isEditing && (\n          <div className=\"mt-6 flex justify-end\">\n            <button\n              onClick={handleSaveProfile}\n              className=\"px-6 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\"\n            >\n              Save Changes\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AdminProfilePage;\n","size_bytes":11341},"client/src/pages/auth/LoginPage.tsx":{"content":"import React, { useState } from 'react';\nimport { Link, Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { Trophy, Eye, EyeOff, Loader } from 'lucide-react';\n\nexport default function LoginPage() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const { login, isAuthenticated, user } = useAuth();\n  const location = useLocation();\n\n  if (isAuthenticated && user) {\n    const dashboardPaths = {\n      user: '/home',\n      facility_owner: '/owner/dashboard',\n      admin: '/admin/dashboard',\n    };\n    const from = location.state?.from || dashboardPaths[user.role];\n    return <Navigate to={from} replace />;\n  }\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!email || !password) return;\n\n    setLoading(true);\n    setError('');\n\n    try {\n      const success = await login(email, password);\n      if (!success) {\n        setError('Invalid email or password');\n      }\n    } catch (err) {\n      setError('An error occurred. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const demoAccounts = [\n    { label: 'User Account', email: 'user@example.com', role: 'User' },\n    { label: 'Facility Owner', email: 'owner@example.com', role: 'Owner' },\n    { label: 'Admin Account', email: 'admin@example.com', role: 'Admin' },\n  ];\n\n  const fillDemoAccount = (email: string) => {\n    setEmail(email);\n    setPassword('password123');\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-indigo-50 flex items-center justify-center px-4\">\n      <div className=\"max-w-md w-full space-y-8\">\n        {/* Header */}\n        <div className=\"text-center\">\n          <div className=\"flex justify-center\">\n            <div className=\"p-3 bg-blue-600 rounded-2xl\">\n              <Trophy className=\"h-10 w-10 text-white\" />\n            </div>\n          </div>\n          <h2 className=\"mt-6 text-3xl font-bold text-gray-900\">Welcome to QuickCourt</h2>\n          <p className=\"mt-2 text-gray-600\">Sign in to your account</p>\n        </div>\n\n        {/* Demo Accounts */}\n        <div className=\"bg-blue-50 rounded-lg p-4\">\n          <p className=\"text-sm font-medium text-blue-900 mb-3\">Quick Demo Access:</p>\n          <div className=\"grid gap-2\">\n            {demoAccounts.map((account) => (\n              <button\n                key={account.email}\n                onClick={() => fillDemoAccount(account.email)}\n                className=\"text-left p-2 bg-white rounded-lg border border-blue-200 hover:border-blue-300 hover:bg-blue-50 transition-colors text-sm\"\n              >\n                <div className=\"font-medium text-blue-900\">{account.label}</div>\n                <div className=\"text-blue-600\">{account.email}</div>\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {/* Login Form */}\n        <form className=\"mt-8 space-y-6 bg-white p-8 rounded-2xl shadow-lg border border-gray-100\" onSubmit={handleSubmit}>\n          {error && (\n            <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-lg text-sm\">\n              {error}\n            </div>\n          )}\n\n          <div className=\"space-y-4\">\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Email address\n              </label>\n              <input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                required\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                placeholder=\"Enter your email\"\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Password\n              </label>\n              <div className=\"relative\">\n                <input\n                  id=\"password\"\n                  name=\"password\"\n                  type={showPassword ? 'text' : 'password'}\n                  autoComplete=\"current-password\"\n                  required\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors pr-12\"\n                  placeholder=\"Enter your password\"\n                />\n                <button\n                  type=\"button\"\n                  onClick={() => setShowPassword(!showPassword)}\n                  className=\"absolute inset-y-0 right-0 pr-3 flex items-center text-gray-400 hover:text-gray-600\"\n                >\n                  {showPassword ? <EyeOff className=\"h-5 w-5\" /> : <Eye className=\"h-5 w-5\" />}\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <button\n            type=\"submit\"\n            disabled={loading || !email || !password}\n            className=\"w-full flex justify-center py-3 px-4 border border-transparent rounded-lg shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n          >\n            {loading ? (\n              <Loader className=\"h-5 w-5 animate-spin\" />\n            ) : (\n              'Sign in'\n            )}\n          </button>\n\n          <div className=\"text-center\">\n            <p className=\"text-sm text-gray-600\">\n              Don't have an account?{' '}\n              <Link to=\"/register\" className=\"font-medium text-blue-600 hover:text-blue-500\">\n                Sign up\n              </Link>\n            </p>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}","size_bytes":6199},"client/src/pages/auth/RegisterPage.tsx":{"content":"import React, { useState } from 'react';\nimport { Link, Navigate } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { Trophy, Eye, EyeOff, Loader, Check } from 'lucide-react';\n\nexport default function RegisterPage() {\n  const [formData, setFormData] = useState({\n    fullName: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    role: 'user' as 'user' | 'facility_owner',\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [step, setStep] = useState(1); // 1: form, 2: otp, 3: success\n\n  const { register, isAuthenticated, user } = useAuth();\n\n  if (isAuthenticated && user) {\n    const dashboardPaths = {\n      user: '/home',\n      facility_owner: '/owner/dashboard',\n      admin: '/admin/dashboard',\n    };\n    return <Navigate to={dashboardPaths[user.role]} replace />;\n  }\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (formData.password !== formData.confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n\n    try {\n      // Simulate OTP step\n      setStep(2);\n      \n      // Simulate OTP verification delay\n      setTimeout(() => {\n        register(formData).then(success => {\n          if (success) {\n            setStep(3);\n          } else {\n            setError('Registration failed. Please try again.');\n          }\n          setLoading(false);\n        });\n      }, 2000);\n    } catch (err) {\n      setError('An error occurred. Please try again.');\n      setLoading(false);\n    }\n  };\n\n  const handleOtpSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    // OTP is handled automatically in the simulation\n  };\n\n  if (step === 2) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-green-50 via-white to-emerald-50 flex items-center justify-center px-4\">\n        <div className=\"max-w-md w-full\">\n          <div className=\"text-center\">\n            <div className=\"flex justify-center mb-6\">\n              <div className=\"p-3 bg-green-600 rounded-2xl\">\n                <Trophy className=\"h-10 w-10 text-white\" />\n              </div>\n            </div>\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-2\">Verify Your Email</h2>\n            <p className=\"text-gray-600 mb-8\">\n              We've sent a verification code to {formData.email}\n            </p>\n            \n            <div className=\"bg-white p-8 rounded-2xl shadow-lg border border-gray-100\">\n              {loading ? (\n                <div className=\"text-center py-8\">\n                  <Loader className=\"h-8 w-8 animate-spin mx-auto text-green-600 mb-4\" />\n                  <p className=\"text-gray-600\">Verifying your account...</p>\n                </div>\n              ) : (\n                <form onSubmit={handleOtpSubmit}>\n                  <div className=\"flex justify-center space-x-2 mb-6\">\n                    {[1, 2, 3, 4, 5, 6].map((i) => (\n                      <input\n                        key={i}\n                        type=\"text\"\n                        maxLength={1}\n                        className=\"w-12 h-12 text-center border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-green-500 text-lg font-semibold\"\n                        onChange={(e) => {\n                          const value = e.target.value;\n                          if (value && e.target.nextElementSibling) {\n                            (e.target.nextElementSibling as HTMLInputElement).focus();\n                          }\n                        }}\n                      />\n                    ))}\n                  </div>\n                  <button\n                    type=\"submit\"\n                    className=\"w-full py-3 px-4 bg-green-600 hover:bg-green-700 text-white font-medium rounded-lg transition-colors\"\n                  >\n                    Verify Code\n                  </button>\n                </form>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (step === 3) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-green-50 via-white to-emerald-50 flex items-center justify-center px-4\">\n        <div className=\"max-w-md w-full text-center\">\n          <div className=\"bg-white p-8 rounded-2xl shadow-lg border border-gray-100\">\n            <div className=\"flex justify-center mb-6\">\n              <div className=\"p-3 bg-green-600 rounded-full\">\n                <Check className=\"h-8 w-8 text-white\" />\n              </div>\n            </div>\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">Registration Successful!</h2>\n            <p className=\"text-gray-600 mb-8\">\n              Your account has been created successfully. You can now start booking sports facilities.\n            </p>\n            <div className=\"p-4 bg-green-50 rounded-lg mb-6\">\n              <p className=\"text-sm text-green-800\">\n                🎉 Welcome to QuickCourt! You will be redirected to your dashboard shortly.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-indigo-50 flex items-center justify-center px-4\">\n      <div className=\"max-w-md w-full space-y-8\">\n        {/* Header */}\n        <div className=\"text-center\">\n          <div className=\"flex justify-center\">\n            <div className=\"p-3 bg-blue-600 rounded-2xl\">\n              <Trophy className=\"h-10 w-10 text-white\" />\n            </div>\n          </div>\n          <h2 className=\"mt-6 text-3xl font-bold text-gray-900\">Join QuickCourt</h2>\n          <p className=\"mt-2 text-gray-600\">Create your account to get started</p>\n        </div>\n\n        {/* Registration Form */}\n        <form className=\"mt-8 space-y-6 bg-white p-8 rounded-2xl shadow-lg border border-gray-100\" onSubmit={handleSubmit}>\n          {error && (\n            <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-lg text-sm\">\n              {error}\n            </div>\n          )}\n\n          <div className=\"space-y-4\">\n            <div>\n              <label htmlFor=\"fullName\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Full Name\n              </label>\n              <input\n                id=\"fullName\"\n                name=\"fullName\"\n                type=\"text\"\n                required\n                value={formData.fullName}\n                onChange={handleInputChange}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                placeholder=\"Enter your full name\"\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Email address\n              </label>\n              <input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                required\n                value={formData.email}\n                onChange={handleInputChange}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                placeholder=\"Enter your email\"\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"role\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Account Type\n              </label>\n              <select\n                id=\"role\"\n                name=\"role\"\n                value={formData.role}\n                onChange={handleInputChange}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n              >\n                <option value=\"user\">Sports Enthusiast (Book facilities)</option>\n                <option value=\"facility_owner\">Facility Owner (List facilities)</option>\n              </select>\n            </div>\n\n            <div>\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Password\n              </label>\n              <div className=\"relative\">\n                <input\n                  id=\"password\"\n                  name=\"password\"\n                  type={showPassword ? 'text' : 'password'}\n                  autoComplete=\"new-password\"\n                  required\n                  value={formData.password}\n                  onChange={handleInputChange}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors pr-12\"\n                  placeholder=\"Create a password\"\n                />\n                <button\n                  type=\"button\"\n                  onClick={() => setShowPassword(!showPassword)}\n                  className=\"absolute inset-y-0 right-0 pr-3 flex items-center text-gray-400 hover:text-gray-600\"\n                >\n                  {showPassword ? <EyeOff className=\"h-5 w-5\" /> : <Eye className=\"h-5 w-5\" />}\n                </button>\n              </div>\n            </div>\n\n            <div>\n              <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Confirm Password\n              </label>\n              <div className=\"relative\">\n                <input\n                  id=\"confirmPassword\"\n                  name=\"confirmPassword\"\n                  type={showConfirmPassword ? 'text' : 'password'}\n                  autoComplete=\"new-password\"\n                  required\n                  value={formData.confirmPassword}\n                  onChange={handleInputChange}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors pr-12\"\n                  placeholder=\"Confirm your password\"\n                />\n                <button\n                  type=\"button\"\n                  onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                  className=\"absolute inset-y-0 right-0 pr-3 flex items-center text-gray-400 hover:text-gray-600\"\n                >\n                  {showConfirmPassword ? <EyeOff className=\"h-5 w-5\" /> : <Eye className=\"h-5 w-5\" />}\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <button\n            type=\"submit\"\n            disabled={loading || !formData.fullName || !formData.email || !formData.password || !formData.confirmPassword}\n            className=\"w-full flex justify-center py-3 px-4 border border-transparent rounded-lg shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n          >\n            {loading ? (\n              <Loader className=\"h-5 w-5 animate-spin\" />\n            ) : (\n              'Create Account'\n            )}\n          </button>\n\n          <div className=\"text-center\">\n            <p className=\"text-sm text-gray-600\">\n              Already have an account?{' '}\n              <Link to=\"/login\" className=\"font-medium text-blue-600 hover:text-blue-500\">\n                Sign in\n              </Link>\n            </p>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}","size_bytes":11895},"client/src/pages/owner/OwnerProfilePage.tsx":{"content":"import React, { useState } from 'react';\nimport { User, Building, DollarSign, Calendar, Star, Edit2, Camera, TrendingUp, Users } from 'lucide-react';\nimport { useAuth } from '../../contexts/AuthContext';\n\ninterface OwnerStats {\n  totalFacilities: number;\n  totalBookings: number;\n  totalRevenue: number;\n  averageRating: number;\n  activeCourts: number;\n}\n\ninterface OwnerProfile {\n  id: string;\n  fullName: string;\n  email: string;\n  avatar?: string;\n  role: string;\n  businessName: string;\n  businessAddress: string;\n  phone: string;\n  bio: string;\n  joinDate: string;\n  stats: OwnerStats;\n  facilities: {\n    id: string;\n    name: string;\n    sport: string;\n    rating: number;\n    bookings: number;\n    revenue: number;\n  }[];\n  recentBookings: {\n    id: string;\n    date: string;\n    facility: string;\n    court: string;\n    amount: number;\n    status: string;\n  }[];\n}\n\nconst OwnerProfilePage: React.FC = () => {\n  const { user } = useAuth();\n  const [isEditing, setIsEditing] = useState(false);\n  const [profile, setProfile] = useState<OwnerProfile>({\n    id: '2',\n    fullName: 'Sarah Williams',\n    email: 'sarah.williams@elitecomplex.com',\n    avatar: 'https://images.unsplash.com/photo-1494790108755-2616b612b786?w=150&h=150&fit=crop&crop=face',\n    role: 'facility_owner',\n    businessName: 'Elite Sports Complex',\n    businessAddress: '123 Sports Avenue, Downtown City',\n    phone: '+1 (555) 123-4567',\n    bio: 'Professional facility owner with 8+ years of experience in sports management. Committed to providing premium sports facilities and exceptional customer service.',\n    joinDate: 'March 2020',\n    stats: {\n      totalFacilities: 3,\n      totalBookings: 1247,\n      totalRevenue: 45680,\n      averageRating: 4.7,\n      activeCourts: 12\n    },\n    facilities: [\n      {\n        id: '1',\n        name: 'Elite Sports Complex',\n        sport: 'Multi-sport',\n        rating: 4.8,\n        bookings: 856,\n        revenue: 32150\n      },\n      {\n        id: '2',\n        name: 'City Badminton Center',\n        sport: 'Badminton',\n        rating: 4.6,\n        bookings: 391,\n        revenue: 13530\n      }\n    ],\n    recentBookings: [\n      {\n        id: '1',\n        date: '2 hours ago',\n        facility: 'Elite Sports Complex',\n        court: 'Badminton Court 1',\n        amount: 25,\n        status: 'confirmed'\n      },\n      {\n        id: '2',\n        date: '5 hours ago',\n        facility: 'City Badminton Center',\n        court: 'Court A',\n        amount: 20,\n        status: 'confirmed'\n      },\n      {\n        id: '3',\n        date: '1 day ago',\n        facility: 'Elite Sports Complex',\n        court: 'Tennis Court 1',\n        amount: 45,\n        status: 'completed'\n      }\n    ]\n  });\n\n  const handleSaveProfile = () => {\n    setIsEditing(false);\n    // Here you would typically make an API call to save the profile\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Header */}\n        <div className=\"bg-white rounded-lg shadow-sm p-6 mb-6\">\n          <div className=\"flex items-center justify-between\">\n            <h1 className=\"text-3xl font-bold text-gray-900\">Facility Owner Profile</h1>\n            <button\n              onClick={() => setIsEditing(!isEditing)}\n              className=\"flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n            >\n              <Edit2 className=\"w-4 h-4 mr-2\" />\n              {isEditing ? 'Cancel' : 'Edit Profile'}\n            </button>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          {/* Left Column - Profile Info */}\n          <div className=\"lg:col-span-1\">\n            <div className=\"bg-white rounded-lg shadow-sm p-6\">\n              <div className=\"text-center\">\n                <div className=\"relative inline-block\">\n                  <img\n                    src={profile.avatar || `https://ui-avatars.com/api/?name=${profile.fullName}&size=150`}\n                    alt={profile.fullName}\n                    className=\"w-32 h-32 rounded-full mx-auto object-cover\"\n                  />\n                  {isEditing && (\n                    <button className=\"absolute bottom-0 right-0 bg-blue-600 text-white p-2 rounded-full hover:bg-blue-700\">\n                      <Camera className=\"w-4 h-4\" />\n                    </button>\n                  )}\n                </div>\n                \n                <h2 className=\"mt-4 text-xl font-semibold text-gray-900\">\n                  {isEditing ? (\n                    <input\n                      type=\"text\"\n                      value={profile.fullName}\n                      onChange={(e) => setProfile({...profile, fullName: e.target.value})}\n                      className=\"text-center border-b-2 border-gray-300 focus:border-blue-500 outline-none\"\n                    />\n                  ) : (\n                    profile.fullName\n                  )}\n                </h2>\n                \n                <p className=\"text-gray-600 mt-1\">{profile.email}</p>\n                \n                <div className=\"mt-4 text-sm text-gray-500\">\n                  <Building className=\"w-4 h-4 inline mr-1\" />\n                  {isEditing ? (\n                    <input\n                      type=\"text\"\n                      value={profile.businessName}\n                      onChange={(e) => setProfile({...profile, businessName: e.target.value})}\n                      className=\"text-center border-b-2 border-gray-300 focus:border-blue-500 outline-none\"\n                    />\n                  ) : (\n                    profile.businessName\n                  )}\n                </div>\n                \n                <div className=\"mt-2 text-sm text-gray-500\">\n                  {isEditing ? (\n                    <input\n                      type=\"text\"\n                      value={profile.businessAddress}\n                      onChange={(e) => setProfile({...profile, businessAddress: e.target.value})}\n                      className=\"text-center border-b-2 border-gray-300 focus:border-blue-500 outline-none\"\n                    />\n                  ) : (\n                    profile.businessAddress\n                  )}\n                </div>\n                \n                <div className=\"mt-2 text-sm text-gray-500\">\n                  {isEditing ? (\n                    <input\n                      type=\"text\"\n                      value={profile.phone}\n                      onChange={(e) => setProfile({...profile, phone: e.target.value})}\n                      className=\"text-center border-b-2 border-gray-300 focus:border-blue-500 outline-none\"\n                    />\n                  ) : (\n                    profile.phone\n                  )}\n                </div>\n                \n                <div className=\"mt-2 text-sm text-gray-500\">\n                  Owner since {profile.joinDate}\n                </div>\n              </div>\n\n              <div className=\"mt-6\">\n                <h3 className=\"text-sm font-medium text-gray-900 mb-2\">About</h3>\n                {isEditing ? (\n                  <textarea\n                    value={profile.bio}\n                    onChange={(e) => setProfile({...profile, bio: e.target.value})}\n                    className=\"w-full p-2 border border-gray-300 rounded-md focus:border-blue-500\"\n                    rows={3}\n                  />\n                ) : (\n                  <p className=\"text-sm text-gray-600\">{profile.bio}</p>\n                )}\n              </div>\n            </div>\n\n            {/* Stats Card */}\n            <div className=\"bg-white rounded-lg shadow-sm p-6 mt-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Business Stats</h3>\n              <div className=\"space-y-4\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-600\">Total Facilities</span>\n                  <span className=\"text-lg font-semibold text-blue-600\">{profile.stats.totalFacilities}</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-600\">Active Courts</span>\n                  <span className=\"text-lg font-semibold text-green-600\">{profile.stats.activeCourts}</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-600\">Total Bookings</span>\n                  <span className=\"text-lg font-semibold text-purple-600\">{profile.stats.totalBookings}</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-600\">Total Revenue</span>\n                  <span className=\"text-lg font-semibold text-green-600\">${profile.stats.totalRevenue.toLocaleString()}</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-600\">Average Rating</span>\n                  <span className=\"text-lg font-semibold text-yellow-600\">{profile.stats.averageRating}/5.0</span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Right Column - Facilities & Recent Bookings */}\n          <div className=\"lg:col-span-2\">\n            {/* Facilities Overview */}\n            <div className=\"bg-white rounded-lg shadow-sm p-6 mb-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n                <Building className=\"w-5 h-5 mr-2 text-blue-500\" />\n                My Facilities\n              </h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                {profile.facilities.map((facility) => (\n                  <div key={facility.id} className=\"border border-gray-200 rounded-lg p-4\">\n                    <h4 className=\"font-semibold text-gray-900\">{facility.name}</h4>\n                    <p className=\"text-sm text-gray-600 mb-2\">{facility.sport}</p>\n                    <div className=\"flex items-center mb-2\">\n                      <Star className=\"w-4 h-4 text-yellow-500 mr-1\" />\n                      <span className=\"text-sm\">{facility.rating}</span>\n                    </div>\n                    <div className=\"text-sm text-gray-600\">\n                      <p>{facility.bookings} bookings</p>\n                      <p className=\"font-semibold text-green-600\">${facility.revenue.toLocaleString()} revenue</p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* Recent Bookings */}\n            <div className=\"bg-white rounded-lg shadow-sm p-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n                <Calendar className=\"w-5 h-5 mr-2 text-green-500\" />\n                Recent Bookings\n              </h3>\n              <div className=\"space-y-4\">\n                {profile.recentBookings.map((booking) => (\n                  <div key={booking.id} className=\"flex items-center justify-between border-b border-gray-100 pb-4 last:border-0\">\n                    <div>\n                      <p className=\"font-medium text-gray-900\">{booking.facility}</p>\n                      <p className=\"text-sm text-gray-600\">{booking.court}</p>\n                      <p className=\"text-xs text-gray-400\">{booking.date}</p>\n                    </div>\n                    <div className=\"text-right\">\n                      <p className=\"font-semibold text-green-600\">${booking.amount}</p>\n                      <span className={`text-xs px-2 py-1 rounded-full ${\n                        booking.status === 'confirmed' ? 'bg-green-100 text-green-800' : \n                        booking.status === 'completed' ? 'bg-blue-100 text-blue-800' : \n                        'bg-gray-100 text-gray-800'\n                      }`}>\n                        {booking.status}\n                      </span>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {isEditing && (\n          <div className=\"mt-6 flex justify-end\">\n            <button\n              onClick={handleSaveProfile}\n              className=\"px-6 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\"\n            >\n              Save Changes\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default OwnerProfilePage;\n","size_bytes":12633},"client/src/pages/user/HomePage.tsx":{"content":"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ChevronRight, MapPin, Star, Clock, Users, Calendar, Trophy, ArrowRight } from 'lucide-react';\nimport { mockFacilities } from '../../data/mockData';\n\nexport default function HomePage() {\n  const popularSports = [\n    { name: 'Badminton', icon: '🏸', color: 'bg-blue-100 text-blue-700' },\n    { name: 'Tennis', icon: '🎾', color: 'bg-green-100 text-green-700' },\n    { name: 'Basketball', icon: '🏀', color: 'bg-orange-100 text-orange-700' },\n    { name: 'Football', icon: '⚽', color: 'bg-red-100 text-red-700' },\n    { name: 'Cricket', icon: '🏏', color: 'bg-purple-100 text-purple-700' },\n  ];\n\n  const topVenues = mockFacilities.slice(0, 3);\n\n  return (\n    <div className=\"space-y-12\">\n      {/* Hero Section */}\n      <div className=\"relative bg-gradient-to-br from-blue-600 via-blue-700 to-indigo-800 rounded-2xl overflow-hidden\">\n        <div className=\"absolute inset-0 bg-black/20\"></div>\n        <div className=\"relative px-8 py-12 md:py-16\">\n          <div className=\"max-w-2xl\">\n            <h1 className=\"text-4xl md:text-5xl font-bold text-white mb-4 leading-tight\">\n              Find & Book Sports Facilities Near You\n            </h1>\n            <p className=\"text-xl text-blue-100 mb-8\">\n              Discover amazing courts, fields, and facilities. Book instantly and play today.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4\">\n              <Link\n                to=\"/venues\"\n                className=\"inline-flex items-center px-6 py-3 bg-white text-blue-600 font-semibold rounded-lg hover:bg-blue-50 transition-colors\"\n              >\n                Browse Venues\n                <ArrowRight className=\"ml-2 h-5 w-5\" />\n              </Link>\n              <button className=\"inline-flex items-center px-6 py-3 border-2 border-white text-white font-semibold rounded-lg hover:bg-white hover:text-blue-600 transition-colors\">\n                <MapPin className=\"mr-2 h-5 w-5\" />\n                Find Nearby\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Quick Stats */}\n      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-6\">\n        <div className=\"bg-white rounded-xl p-6 text-center shadow-sm border border-gray-100 hover:shadow-md transition-shadow\">\n          <div className=\"w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center mx-auto mb-3\">\n            <MapPin className=\"h-6 w-6 text-blue-600\" />\n          </div>\n          <div className=\"text-2xl font-bold text-gray-900 mb-1\">50+</div>\n          <div className=\"text-gray-600 text-sm\">Venues</div>\n        </div>\n        <div className=\"bg-white rounded-xl p-6 text-center shadow-sm border border-gray-100 hover:shadow-md transition-shadow\">\n          <div className=\"w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center mx-auto mb-3\">\n            <Users className=\"h-6 w-6 text-green-600\" />\n          </div>\n          <div className=\"text-2xl font-bold text-gray-900 mb-1\">1000+</div>\n          <div className=\"text-gray-600 text-sm\">Happy Users</div>\n        </div>\n        <div className=\"bg-white rounded-xl p-6 text-center shadow-sm border border-gray-100 hover:shadow-md transition-shadow\">\n          <div className=\"w-12 h-12 bg-orange-100 rounded-lg flex items-center justify-center mx-auto mb-3\">\n            <Calendar className=\"h-6 w-6 text-orange-600\" />\n          </div>\n          <div className=\"text-2xl font-bold text-gray-900 mb-1\">5000+</div>\n          <div className=\"text-gray-600 text-sm\">Bookings</div>\n        </div>\n        <div className=\"bg-white rounded-xl p-6 text-center shadow-sm border border-gray-100 hover:shadow-md transition-shadow\">\n          <div className=\"w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center mx-auto mb-3\">\n            <Trophy className=\"h-6 w-6 text-purple-600\" />\n          </div>\n          <div className=\"text-2xl font-bold text-gray-900 mb-1\">15</div>\n          <div className=\"text-gray-600 text-sm\">Sports Types</div>\n        </div>\n      </div>\n\n      {/* Popular Sports */}\n      <div>\n        <div className=\"flex items-center justify-between mb-8\">\n          <h2 className=\"text-3xl font-bold text-gray-900\">Popular Sports</h2>\n          <Link\n            to=\"/venues\"\n            className=\"text-blue-600 hover:text-blue-700 font-semibold flex items-center\"\n          >\n            View All\n            <ChevronRight className=\"ml-1 h-4 w-4\" />\n          </Link>\n        </div>\n        <div className=\"grid grid-cols-2 md:grid-cols-5 gap-4\">\n          {popularSports.map((sport) => (\n            <Link\n              key={sport.name}\n              to={`/venues?sport=${sport.name.toLowerCase()}`}\n              className=\"bg-white rounded-xl p-6 text-center hover:shadow-lg transition-all duration-200 border border-gray-100 hover:scale-105\"\n            >\n              <div className=\"text-4xl mb-3\">{sport.icon}</div>\n              <h3 className=\"font-semibold text-gray-900 mb-2\">{sport.name}</h3>\n              <div className={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${sport.color}`}>\n                Popular\n              </div>\n            </Link>\n          ))}\n        </div>\n      </div>\n\n      {/* Featured Venues */}\n      <div>\n        <div className=\"flex items-center justify-between mb-8\">\n          <h2 className=\"text-3xl font-bold text-gray-900\">Featured Venues</h2>\n          <Link\n            to=\"/venues\"\n            className=\"text-blue-600 hover:text-blue-700 font-semibold flex items-center\"\n          >\n            View All\n            <ChevronRight className=\"ml-1 h-4 w-4\" />\n          </Link>\n        </div>\n        <div className=\"grid md:grid-cols-3 gap-6\">\n          {topVenues.map((venue) => (\n            <Link\n              key={venue.id}\n              to={`/venues/${venue.id}`}\n              className=\"bg-white rounded-xl overflow-hidden shadow-sm border border-gray-100 hover:shadow-xl transition-all duration-300 hover:-translate-y-1\"\n            >\n              <div className=\"relative h-48\">\n                <img\n                  src={venue.photos[0]}\n                  alt={venue.name}\n                  className=\"w-full h-full object-cover\"\n                />\n                <div className=\"absolute top-4 right-4\">\n                  <div className=\"bg-white/90 backdrop-blur-sm rounded-lg px-2 py-1 flex items-center\">\n                    <Star className=\"h-4 w-4 text-yellow-400 fill-current\" />\n                    <span className=\"text-sm font-semibold ml-1\">{venue.rating}</span>\n                  </div>\n                </div>\n              </div>\n              <div className=\"p-6\">\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">{venue.name}</h3>\n                <div className=\"flex items-center text-gray-600 mb-3\">\n                  <MapPin className=\"h-4 w-4 mr-1\" />\n                  <span className=\"text-sm\">{venue.address.split(',')[1]}</span>\n                </div>\n                <div className=\"flex flex-wrap gap-2 mb-4\">\n                  {venue.sports.slice(0, 2).map((sport) => (\n                    <span\n                      key={sport}\n                      className=\"px-2 py-1 bg-blue-100 text-blue-700 text-xs font-medium rounded-lg\"\n                    >\n                      {sport}\n                    </span>\n                  ))}\n                  {venue.sports.length > 2 && (\n                    <span className=\"px-2 py-1 bg-gray-100 text-gray-600 text-xs font-medium rounded-lg\">\n                      +{venue.sports.length - 2} more\n                    </span>\n                  )}\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <span className=\"text-lg font-bold text-gray-900\">\n                      ${venue.priceRange.min}\n                    </span>\n                    <span className=\"text-gray-600 text-sm\">/hour</span>\n                  </div>\n                  <div className=\"flex items-center text-gray-500 text-sm\">\n                    <Clock className=\"h-4 w-4 mr-1\" />\n                    <span>Available</span>\n                  </div>\n                </div>\n              </div>\n            </Link>\n          ))}\n        </div>\n      </div>\n\n      {/* CTA Section */}\n      <div className=\"bg-gradient-to-r from-green-500 to-blue-600 rounded-2xl p-8 md:p-12 text-white text-center\">\n        <h2 className=\"text-3xl md:text-4xl font-bold mb-4\">Ready to Play?</h2>\n        <p className=\"text-xl text-green-100 mb-8 max-w-2xl mx-auto\">\n          Join thousands of sports enthusiasts who trust QuickCourt for their facility bookings.\n        </p>\n        <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n          <Link\n            to=\"/venues\"\n            className=\"inline-flex items-center px-8 py-4 bg-white text-blue-600 font-bold rounded-lg hover:bg-blue-50 transition-colors\"\n          >\n            Start Booking Now\n            <ArrowRight className=\"ml-2 h-5 w-5\" />\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":9168},"client/src/pages/user/ProfilePage.tsx":{"content":"import React, { useState } from 'react';\nimport { User, Calendar, Trophy, MapPin, Clock, Star, Edit2, Camera } from 'lucide-react';\nimport { useAuth } from '../../contexts/AuthContext';\n\ninterface PlayerStats {\n  totalGames: number;\n  winRate: number;\n  favoriteSport: string;\n  skillLevel: string;\n  totalHours: number;\n}\n\ninterface PlayerProfile {\n  id: string;\n  fullName: string;\n  email: string;\n  avatar?: string;\n  role: string;\n  location: string;\n  bio: string;\n  joinDate: string;\n  stats: PlayerStats;\n  achievements: string[];\n  recentActivity: {\n    date: string;\n    activity: string;\n    facility: string;\n  }[];\n}\n\nconst ProfilePage: React.FC = () => {\n  const { user } = useAuth();\n  const [isEditing, setIsEditing] = useState(false);\n  const [profile, setProfile] = useState<PlayerProfile>({\n    id: '1',\n    fullName: 'Alex Johnson',\n    email: 'alex.johnson@email.com',\n    avatar: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face',\n    role: 'user',\n    location: 'New York, USA',\n    bio: 'Passionate badminton player with 5 years of experience. Looking for competitive matches and friendly games.',\n    joinDate: 'January 2023',\n    stats: {\n      totalGames: 127,\n      winRate: 68,\n      favoriteSport: 'Badminton',\n      skillLevel: 'Intermediate',\n      totalHours: 340\n    },\n    achievements: [\n      '🏆 Tournament Champion - Summer 2024',\n      '🥈 Runner-up - City Championship 2024',\n      '⭐ 50+ Games Played',\n      '🔥 10 Game Win Streak'\n    ],\n    recentActivity: [\n      {\n        date: '2 days ago',\n        activity: 'Played Badminton',\n        facility: 'Elite Sports Complex'\n      },\n      {\n        date: '5 days ago',\n        activity: 'Booked Tennis Court',\n        facility: 'Metro Tennis Club'\n      },\n      {\n        date: '1 week ago',\n        activity: 'Completed Training Session',\n        facility: 'City Badminton Center'\n      }\n    ]\n  });\n\n  const handleSaveProfile = () => {\n    setIsEditing(false);\n    // Here you would typically make an API call to save the profile\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Header */}\n        <div className=\"bg-white rounded-lg shadow-sm p-6 mb-6\">\n          <div className=\"flex items-center justify-between\">\n            <h1 className=\"text-3xl font-bold text-gray-900\">Player Profile</h1>\n            <button\n              onClick={() => setIsEditing(!isEditing)}\n              className=\"flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n            >\n              <Edit2 className=\"w-4 h-4 mr-2\" />\n              {isEditing ? 'Cancel' : 'Edit Profile'}\n            </button>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          {/* Left Column - Profile Info */}\n          <div className=\"lg:col-span-1\">\n            <div className=\"bg-white rounded-lg shadow-sm p-6\">\n              <div className=\"text-center\">\n                <div className=\"relative inline-block\">\n                  <img\n                    src={profile.avatar || `https://ui-avatars.com/api/?name=${profile.fullName}&size=150`}\n                    alt={profile.fullName}\n                    className=\"w-32 h-32 rounded-full mx-auto object-cover\"\n                  />\n                  {isEditing && (\n                    <button className=\"absolute bottom-0 right-0 bg-blue-600 text-white p-2 rounded-full hover:bg-blue-700\">\n                      <Camera className=\"w-4 h-4\" />\n                    </button>\n                  )}\n                </div>\n                \n                <h2 className=\"mt-4 text-xl font-semibold text-gray-900\">\n                  {isEditing ? (\n                    <input\n                      type=\"text\"\n                      value={profile.fullName}\n                      onChange={(e) => setProfile({...profile, fullName: e.target.value})}\n                      className=\"text-center border-b-2 border-gray-300 focus:border-blue-500 outline-none\"\n                    />\n                  ) : (\n                    profile.fullName\n                  )}\n                </h2>\n                \n                <p className=\"text-gray-600 mt-1\">{profile.email}</p>\n                \n                <div className=\"mt-4 flex items-center justify-center text-sm text-gray-500\">\n                  <MapPin className=\"w-4 h-4 mr-1\" />\n                  {isEditing ? (\n                    <input\n                      type=\"text\"\n                      value={profile.location}\n                      onChange={(e) => setProfile({...profile, location: e.target.value})}\n                      className=\"text-center border-b-2 border-gray-300 focus:border-blue-500 outline-none\"\n                    />\n                  ) : (\n                    profile.location\n                  )}\n                </div>\n                \n                <div className=\"mt-2 text-sm text-gray-500\">\n                  Member since {profile.joinDate}\n                </div>\n              </div>\n\n              <div className=\"mt-6\">\n                <h3 className=\"text-sm font-medium text-gray-900 mb-2\">Bio</h3>\n                {isEditing ? (\n                  <textarea\n                    value={profile.bio}\n                    onChange={(e) => setProfile({...profile, bio: e.target.value})}\n                    className=\"w-full p-2 border border-gray-300 rounded-md focus:border-blue-500\"\n                    rows={3}\n                  />\n                ) : (\n                  <p className=\"text-sm text-gray-600\">{profile.bio}</p>\n                )}\n              </div>\n            </div>\n\n            {/* Stats Card */}\n            <div className=\"bg-white rounded-lg shadow-sm p-6 mt-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Player Stats</h3>\n              <div className=\"space-y-4\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-600\">Total Games</span>\n                  <span className=\"text-lg font-semibold text-blue-600\">{profile.stats.totalGames}</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-600\">Win Rate</span>\n                  <span className=\"text-lg font-semibold text-green-600\">{profile.stats.winRate}%</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-600\">Favorite Sport</span>\n                  <span className=\"text-sm font-medium\">{profile.stats.favoriteSport}</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-600\">Skill Level</span>\n                  <span className=\"text-sm font-medium\">{profile.stats.skillLevel}</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-600\">Total Hours</span>\n                  <span className=\"text-sm font-medium\">{profile.stats.totalHours}h</span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Right Column - Achievements & Activity */}\n          <div className=\"lg:col-span-2\">\n            {/* Achievements */}\n            <div className=\"bg-white rounded-lg shadow-sm p-6 mb-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n                <Trophy className=\"w-5 h-5 mr-2 text-yellow-500\" />\n                Achievements\n              </h3>\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3\">\n                {profile.achievements.map((achievement, index) => (\n                  <div key={index} className=\"bg-gray-50 rounded-lg p-3 text-sm\">\n                    {achievement}\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* Recent Activity */}\n            <div className=\"bg-white rounded-lg shadow-sm p-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n                <Clock className=\"w-5 h-5 mr-2 text-blue-500\" />\n                Recent Activity\n              </h3>\n              <div className=\"space-y-4\">\n                {profile.recentActivity.map((activity, index) => (\n                  <div key={index} className=\"flex items-start space-x-3\">\n                    <div className=\"flex-shrink-0\">\n                      <div className=\"w-2 h-2 bg-blue-500 rounded-full mt-2\"></div>\n                    </div>\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-900\">{activity.activity}</p>\n                      <p className=\"text-sm text-gray-500\">{activity.facility}</p>\n                      <p className=\"text-xs text-gray-400\">{activity.date}</p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {isEditing && (\n          <div className=\"mt-6 flex justify-end\">\n            <button\n              onClick={handleSaveProfile}\n              className=\"px-6 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\"\n            >\n              Save Changes\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ProfilePage;\n","size_bytes":9581},"client/src/pages/user/VenueDetailsPage.tsx":{"content":"import React, { useState } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport { \n  MapPin, \n  Star, \n  Clock, \n  Wifi, \n  Car, \n  Coffee, \n  Shield, \n  Users, \n  ChevronLeft, \n  ChevronRight,\n  Calendar,\n  ArrowRight\n} from 'lucide-react';\nimport { mockFacilities, mockCourts } from '../../data/mockData';\n\nexport default function VenueDetailsPage() {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n\n  const venue = mockFacilities.find(v => v.id === id);\n  const venueCourts = mockCourts.filter(c => c.facilityId === id);\n\n  if (!venue) {\n    return (\n      <div className=\"text-center py-12\">\n        <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">Venue not found</h2>\n        <Link to=\"/venues\" className=\"text-blue-600 hover:text-blue-700\">\n          ← Back to venues\n        </Link>\n      </div>\n    );\n  }\n\n  const amenityIcons: { [key: string]: React.ReactNode } = {\n    'Parking': <Car className=\"h-5 w-5\" />,\n    'Wi-Fi': <Wifi className=\"h-5 w-5\" />,\n    'Cafeteria': <Coffee className=\"h-5 w-5\" />,\n    'Air Conditioning': <Shield className=\"h-5 w-5\" />,\n    'Locker Rooms': <Users className=\"h-5 w-5\" />,\n  };\n\n  const nextImage = () => {\n    setCurrentImageIndex((prev) => \n      prev === venue.photos.length - 1 ? 0 : prev + 1\n    );\n  };\n\n  const prevImage = () => {\n    setCurrentImageIndex((prev) => \n      prev === 0 ? venue.photos.length - 1 : prev - 1\n    );\n  };\n\n  const handleBookNow = (courtId?: string) => {\n    if (courtId) {\n      navigate(`/book/${venue.id}/${courtId}`);\n    } else if (venueCourts.length > 0) {\n      navigate(`/book/${venue.id}/${venueCourts[0].id}`);\n    }\n  };\n\n  return (\n    <div className=\"space-y-8\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <Link \n          to=\"/venues\"\n          className=\"flex items-center text-gray-600 hover:text-gray-900 transition-colors\"\n        >\n          <ChevronLeft className=\"h-5 w-5 mr-1\" />\n          Back to venues\n        </Link>\n      </div>\n\n      {/* Image Gallery */}\n      <div className=\"relative h-96 md:h-[500px] rounded-2xl overflow-hidden\">\n        <img\n          src={venue.photos[currentImageIndex]}\n          alt={`${venue.name} - Image ${currentImageIndex + 1}`}\n          className=\"w-full h-full object-cover\"\n        />\n        \n        {/* Image Navigation */}\n        {venue.photos.length > 1 && (\n          <>\n            <button\n              onClick={prevImage}\n              className=\"absolute left-4 top-1/2 transform -translate-y-1/2 bg-black/50 hover:bg-black/70 text-white p-2 rounded-full transition-colors\"\n            >\n              <ChevronLeft className=\"h-5 w-5\" />\n            </button>\n            <button\n              onClick={nextImage}\n              className=\"absolute right-4 top-1/2 transform -translate-y-1/2 bg-black/50 hover:bg-black/70 text-white p-2 rounded-full transition-colors\"\n            >\n              <ChevronRight className=\"h-5 w-5\" />\n            </button>\n            \n            {/* Dots indicator */}\n            <div className=\"absolute bottom-4 left-1/2 transform -translate-x-1/2 flex space-x-2\">\n              {venue.photos.map((_, index) => (\n                <button\n                  key={index}\n                  onClick={() => setCurrentImageIndex(index)}\n                  className={`w-2 h-2 rounded-full transition-colors ${\n                    index === currentImageIndex ? 'bg-white' : 'bg-white/50'\n                  }`}\n                />\n              ))}\n            </div>\n          </>\n        )}\n        \n        {/* Rating overlay */}\n        <div className=\"absolute top-4 right-4 bg-white/90 backdrop-blur-sm rounded-lg px-3 py-2 flex items-center\">\n          <Star className=\"h-5 w-5 text-yellow-400 fill-current\" />\n          <span className=\"font-semibold ml-1\">{venue.rating}</span>\n          <span className=\"text-gray-600 ml-1\">({venue.reviewCount})</span>\n        </div>\n      </div>\n\n      <div className=\"grid lg:grid-cols-3 gap-8\">\n        {/* Main Content */}\n        <div className=\"lg:col-span-2 space-y-8\">\n          {/* Basic Info */}\n          <div>\n            <h1 className=\"text-4xl font-bold text-gray-900 mb-4\">{venue.name}</h1>\n            \n            <div className=\"flex flex-wrap items-center gap-4 mb-6\">\n              <div className=\"flex items-center text-gray-600\">\n                <MapPin className=\"h-5 w-5 mr-2\" />\n                <span>{venue.address}</span>\n              </div>\n              <div className=\"flex items-center text-gray-600\">\n                <Clock className=\"h-5 w-5 mr-2\" />\n                <span>Open daily</span>\n              </div>\n            </div>\n\n            {/* Sports Available */}\n            <div className=\"flex flex-wrap gap-2 mb-6\">\n              {venue.sports.map((sport) => (\n                <span\n                  key={sport}\n                  className=\"px-3 py-1 bg-blue-100 text-blue-700 font-medium rounded-lg\"\n                >\n                  {sport}\n                </span>\n              ))}\n            </div>\n          </div>\n\n          {/* Description */}\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">About This Venue</h2>\n            <p className=\"text-gray-600 leading-relaxed\">{venue.description}</p>\n          </div>\n\n          {/* Amenities */}\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">Amenities</h2>\n            <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\n              {venue.amenities.map((amenity) => (\n                <div key={amenity} className=\"flex items-center p-3 bg-gray-50 rounded-lg\">\n                  <div className=\"text-blue-600 mr-3\">\n                    {amenityIcons[amenity] || <Shield className=\"h-5 w-5\" />}\n                  </div>\n                  <span className=\"text-gray-900 font-medium\">{amenity}</span>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Available Courts */}\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">Available Courts</h2>\n            <div className=\"space-y-4\">\n              {venueCourts.map((court) => (\n                <div key={court.id} className=\"bg-white border border-gray-200 rounded-xl p-6 hover:shadow-md transition-shadow\">\n                  <div className=\"flex items-center justify-between mb-4\">\n                    <div>\n                      <h3 className=\"text-xl font-semibold text-gray-900\">{court.name}</h3>\n                      <p className=\"text-gray-600\">{court.sportType}</p>\n                    </div>\n                    <div className=\"text-right\">\n                      <div className=\"text-2xl font-bold text-gray-900\">${court.pricePerHour}</div>\n                      <div className=\"text-gray-600 text-sm\">per hour</div>\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"text-sm text-gray-600\">\n                      Operating Hours: {court.operatingHours.start} - {court.operatingHours.end}\n                    </div>\n                    <button\n                      onClick={() => handleBookNow(court.id)}\n                      className=\"px-6 py-2 bg-blue-600 text-white font-semibold rounded-lg hover:bg-blue-700 transition-colors\"\n                    >\n                      Book This Court\n                    </button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        {/* Sidebar */}\n        <div className=\"space-y-6\">\n          {/* Booking Card */}\n          <div className=\"bg-white border border-gray-200 rounded-xl p-6 sticky top-8\">\n            <div className=\"text-center mb-6\">\n              <div className=\"text-3xl font-bold text-gray-900 mb-2\">\n                ${venue.priceRange.min} - ${venue.priceRange.max}\n              </div>\n              <div className=\"text-gray-600\">per hour</div>\n            </div>\n            \n            <button\n              onClick={() => handleBookNow()}\n              className=\"w-full bg-blue-600 text-white font-bold py-4 rounded-lg hover:bg-blue-700 transition-colors mb-4 flex items-center justify-center\"\n            >\n              <Calendar className=\"h-5 w-5 mr-2\" />\n              Book Now\n              <ArrowRight className=\"h-5 w-5 ml-2\" />\n            </button>\n            \n            <div className=\"text-center text-sm text-gray-500\">\n              Free cancellation up to 2 hours before\n            </div>\n          </div>\n\n          {/* Quick Stats */}\n          <div className=\"bg-gray-50 rounded-xl p-6\">\n            <h3 className=\"font-semibold text-gray-900 mb-4\">Venue Stats</h3>\n            <div className=\"space-y-3\">\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Courts Available</span>\n                <span className=\"font-semibold\">{venueCourts.length}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Sports Offered</span>\n                <span className=\"font-semibold\">{venue.sports.length}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Rating</span>\n                <div className=\"flex items-center\">\n                  <Star className=\"h-4 w-4 text-yellow-400 fill-current mr-1\" />\n                  <span className=\"font-semibold\">{venue.rating}</span>\n                </div>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Reviews</span>\n                <span className=\"font-semibold\">{venue.reviewCount}</span>\n              </div>\n            </div>\n          </div>\n\n          {/* Contact Info */}\n          <div className=\"bg-white border border-gray-200 rounded-xl p-6\">\n            <h3 className=\"font-semibold text-gray-900 mb-4\">Contact Information</h3>\n            <div className=\"space-y-3 text-sm\">\n              <div>\n                <span className=\"text-gray-600\">Address:</span>\n                <p className=\"font-medium\">{venue.address}</p>\n              </div>\n              <div>\n                <span className=\"text-gray-600\">Phone:</span>\n                <p className=\"font-medium\">+1 (555) 123-4567</p>\n              </div>\n              <div>\n                <span className=\"text-gray-600\">Email:</span>\n                <p className=\"font-medium\">info@{venue.name.toLowerCase().replace(/\\s+/g, '')}.com</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":10815},"client/src/pages/user/VenuesPage.tsx":{"content":"import React, { useState, useMemo } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { Search, Filter, MapPin, Star, Clock, ChevronLeft, ChevronRight } from 'lucide-react';\nimport { mockFacilities } from '../../data/mockData';\n\nexport default function VenuesPage() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchTerm, setSearchTerm] = useState(searchParams.get('search') || '');\n  const [selectedSport, setSelectedSport] = useState(searchParams.get('sport') || '');\n  const [priceRange, setPriceRange] = useState(searchParams.get('price') || '');\n  const [rating, setRating] = useState(searchParams.get('rating') || '');\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 6;\n\n  const sports = ['Badminton', 'Tennis', 'Basketball', 'Football', 'Cricket'];\n  const priceRanges = [\n    { label: 'Under $30', value: '0-30' },\n    { label: '$30 - $50', value: '30-50' },\n    { label: '$50 - $80', value: '50-80' },\n    { label: 'Over $80', value: '80-999' },\n  ];\n\n  const filteredVenues = useMemo(() => {\n    let filtered = mockFacilities.filter(venue => venue.status === 'approved');\n\n    if (searchTerm) {\n      filtered = filtered.filter(venue =>\n        venue.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        venue.address.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n    }\n\n    if (selectedSport) {\n      filtered = filtered.filter(venue =>\n        venue.sports.some(sport => \n          sport.toLowerCase().includes(selectedSport.toLowerCase())\n        )\n      );\n    }\n\n    if (priceRange) {\n      const [min, max] = priceRange.split('-').map(Number);\n      filtered = filtered.filter(venue =>\n        venue.priceRange.min >= min && venue.priceRange.max <= max\n      );\n    }\n\n    if (rating) {\n      const minRating = Number(rating);\n      filtered = filtered.filter(venue => venue.rating >= minRating);\n    }\n\n    return filtered;\n  }, [searchTerm, selectedSport, priceRange, rating]);\n\n  const totalPages = Math.ceil(filteredVenues.length / itemsPerPage);\n  const paginatedVenues = filteredVenues.slice(\n    (currentPage - 1) * itemsPerPage,\n    currentPage * itemsPerPage\n  );\n\n  const handleSearch = (e: React.FormEvent) => {\n    e.preventDefault();\n    const params = new URLSearchParams();\n    if (searchTerm) params.set('search', searchTerm);\n    if (selectedSport) params.set('sport', selectedSport);\n    if (priceRange) params.set('price', priceRange);\n    if (rating) params.set('rating', rating);\n    setSearchParams(params);\n    setCurrentPage(1);\n  };\n\n  const clearFilters = () => {\n    setSearchTerm('');\n    setSelectedSport('');\n    setPriceRange('');\n    setRating('');\n    setSearchParams({});\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"space-y-8\">\n      {/* Header */}\n      <div>\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Sports Venues</h1>\n        <p className=\"text-gray-600\">Discover and book amazing sports facilities near you</p>\n      </div>\n\n      {/* Search and Filters */}\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6\">\n        <form onSubmit={handleSearch} className=\"space-y-4\">\n          <div className=\"flex flex-col lg:flex-row gap-4\">\n            {/* Search */}\n            <div className=\"flex-1\">\n              <div className=\"relative\">\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-5 w-5\" />\n                <input\n                  type=\"text\"\n                  placeholder=\"Search venues or locations...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  className=\"w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                />\n              </div>\n            </div>\n\n            {/* Filters */}\n            <div className=\"flex flex-col sm:flex-row gap-4\">\n              <select\n                value={selectedSport}\n                onChange={(e) => setSelectedSport(e.target.value)}\n                className=\"px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              >\n                <option value=\"\">All Sports</option>\n                {sports.map(sport => (\n                  <option key={sport} value={sport}>{sport}</option>\n                ))}\n              </select>\n\n              <select\n                value={priceRange}\n                onChange={(e) => setPriceRange(e.target.value)}\n                className=\"px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              >\n                <option value=\"\">Any Price</option>\n                {priceRanges.map(range => (\n                  <option key={range.value} value={range.value}>{range.label}</option>\n                ))}\n              </select>\n\n              <select\n                value={rating}\n                onChange={(e) => setRating(e.target.value)}\n                className=\"px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              >\n                <option value=\"\">Any Rating</option>\n                <option value=\"4.5\">4.5+ Stars</option>\n                <option value=\"4.0\">4.0+ Stars</option>\n                <option value=\"3.5\">3.5+ Stars</option>\n              </select>\n            </div>\n          </div>\n\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-between\">\n            <button\n              type=\"submit\"\n              className=\"px-6 py-3 bg-blue-600 text-white font-semibold rounded-lg hover:bg-blue-700 transition-colors\"\n            >\n              <Filter className=\"h-4 w-4 inline mr-2\" />\n              Apply Filters\n            </button>\n            \n            {(searchTerm || selectedSport || priceRange || rating) && (\n              <button\n                type=\"button\"\n                onClick={clearFilters}\n                className=\"px-6 py-3 border border-gray-300 text-gray-700 font-semibold rounded-lg hover:bg-gray-50 transition-colors\"\n              >\n                Clear All\n              </button>\n            )}\n          </div>\n        </form>\n      </div>\n\n      {/* Results Summary */}\n      <div className=\"flex items-center justify-between\">\n        <p className=\"text-gray-600\">\n          Showing {paginatedVenues.length} of {filteredVenues.length} venues\n        </p>\n      </div>\n\n      {/* Venues Grid */}\n      {filteredVenues.length === 0 ? (\n        <div className=\"text-center py-12\">\n          <div className=\"text-gray-400 mb-4\">\n            <MapPin className=\"h-16 w-16 mx-auto\" />\n          </div>\n          <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">No venues found</h3>\n          <p className=\"text-gray-600 mb-6\">Try adjusting your search criteria</p>\n          <button\n            onClick={clearFilters}\n            className=\"px-6 py-3 bg-blue-600 text-white font-semibold rounded-lg hover:bg-blue-700 transition-colors\"\n          >\n            Clear Filters\n          </button>\n        </div>\n      ) : (\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {paginatedVenues.map((venue) => (\n            <Link\n              key={venue.id}\n              to={`/venues/${venue.id}`}\n              className=\"bg-white rounded-xl overflow-hidden shadow-sm border border-gray-100 hover:shadow-xl transition-all duration-300 hover:-translate-y-1\"\n            >\n              <div className=\"relative h-48\">\n                <img\n                  src={venue.photos[0]}\n                  alt={venue.name}\n                  className=\"w-full h-full object-cover\"\n                />\n                <div className=\"absolute top-4 right-4\">\n                  <div className=\"bg-white/90 backdrop-blur-sm rounded-lg px-2 py-1 flex items-center\">\n                    <Star className=\"h-4 w-4 text-yellow-400 fill-current\" />\n                    <span className=\"text-sm font-semibold ml-1\">{venue.rating}</span>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"p-6\">\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">{venue.name}</h3>\n                \n                <div className=\"flex items-center text-gray-600 mb-3\">\n                  <MapPin className=\"h-4 w-4 mr-1\" />\n                  <span className=\"text-sm\">{venue.address}</span>\n                </div>\n                \n                <div className=\"flex flex-wrap gap-2 mb-4\">\n                  {venue.sports.slice(0, 3).map((sport) => (\n                    <span\n                      key={sport}\n                      className=\"px-2 py-1 bg-blue-100 text-blue-700 text-xs font-medium rounded-lg\"\n                    >\n                      {sport}\n                    </span>\n                  ))}\n                  {venue.sports.length > 3 && (\n                    <span className=\"px-2 py-1 bg-gray-100 text-gray-600 text-xs font-medium rounded-lg\">\n                      +{venue.sports.length - 3} more\n                    </span>\n                  )}\n                </div>\n                \n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <span className=\"text-lg font-bold text-gray-900\">\n                      ${venue.priceRange.min}\n                    </span>\n                    <span className=\"text-gray-600 text-sm\"> - ${venue.priceRange.max}/hour</span>\n                  </div>\n                  <div className=\"flex items-center text-gray-500 text-sm\">\n                    <Clock className=\"h-4 w-4 mr-1\" />\n                    <span>Available</span>\n                  </div>\n                </div>\n              </div>\n            </Link>\n          ))}\n        </div>\n      )}\n\n      {/* Pagination */}\n      {totalPages > 1 && (\n        <div className=\"flex justify-center items-center space-x-4\">\n          <button\n            onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))}\n            disabled={currentPage === 1}\n            className=\"px-4 py-2 border border-gray-300 rounded-lg disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-50 transition-colors\"\n          >\n            <ChevronLeft className=\"h-4 w-4\" />\n          </button>\n          \n          <div className=\"flex items-center space-x-2\">\n            {Array.from({ length: totalPages }, (_, i) => i + 1).map(page => (\n              <button\n                key={page}\n                onClick={() => setCurrentPage(page)}\n                className={`px-4 py-2 rounded-lg transition-colors ${\n                  currentPage === page\n                    ? 'bg-blue-600 text-white'\n                    : 'border border-gray-300 hover:bg-gray-50'\n                }`}\n              >\n                {page}\n              </button>\n            ))}\n          </div>\n          \n          <button\n            onClick={() => setCurrentPage(prev => Math.min(prev + 1, totalPages))}\n            disabled={currentPage === totalPages}\n            className=\"px-4 py-2 border border-gray-300 rounded-lg disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-50 transition-colors\"\n          >\n            <ChevronRight className=\"h-4 w-4\" />\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}","size_bytes":11405}}}